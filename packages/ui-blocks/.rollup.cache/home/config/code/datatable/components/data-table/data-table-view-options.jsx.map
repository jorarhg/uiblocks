{"version":3,"file":"data-table-view-options.jsx","sourceRoot":"","sources":["data-table-view-options.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,OAAO,EACL,YAAY,EACZ,wBAAwB,EACxB,mBAAmB,EACnB,iBAAiB,EACjB,qBAAqB,EACrB,mBAAmB,GACpB,MAAM,+BAA+B,CAAA;AAEtC,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAA;AAEvC,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAA;AAM/C,MAAM,UAAU,oBAAoB,CAAQ,EAAE,KAAK,EAAoC;IACrF,OAAO,CACL,CAAC,YAAY,CACX;MAAA,CAAC,mBAAmB,CAAC,OAAO,CAC1B;QAAA,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CACzD;UAAA,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,EAC7B;UAAA,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAC9C;QAAA,EAAE,MAAM,CACV;MAAA,EAAE,mBAAmB,CACrB;MAAA,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CACpD;QAAA,CAAC,iBAAiB,CAAC,cAAc,EAAE,iBAAiB,CACpD;QAAA,CAAC,qBAAqB,CAAC,AAAD,EACtB;QAAA,CAAC,KAAK;aACH,aAAa,EAAE;aACf,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,OAAO,MAAM,CAAC,UAAU,KAAK,WAAW,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;aACnF,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YACd,OAAO,CACL,CAAC,wBAAwB,CACvB,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CACf,SAAS,CAAC,YAAY,CACtB,OAAO,CAAC,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAC/B,eAAe,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAE7D;gBAAA,CAAC,MAAM,CAAC,EAAE,CACZ;cAAA,EAAE,wBAAwB,CAAC,CAC5B,CAAA;QACH,CAAC,CAAC,CACN;MAAA,EAAE,mBAAmB,CACvB;IAAA,EAAE,YAAY,CAAC,CAChB,CAAA;AACH,CAAC","sourcesContent":["\"use client\"\n\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport type { Table } from \"@tanstack/react-table\"\nimport { Settings } from \"lucide-react\"\n\nimport { Button } from \"@/components/ui/button\"\n\ninterface DataTableViewOptionsProps<TData> {\n  table: Table<TData>\n}\n\nexport function DataTableViewOptions<TData>({ table }: DataTableViewOptionsProps<TData>) {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\" size=\"sm\" className=\"h-8 w-8 p-0\">\n          <Settings className=\"h-4 w-4\" />\n          <span className=\"sr-only\">View options</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\" className=\"w-[180px]\">\n        <DropdownMenuLabel>Toggle columns</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        {table\n          .getAllColumns()\n          .filter((column) => typeof column.accessorFn !== \"undefined\" && column.getCanHide())\n          .map((column) => {\n            return (\n              <DropdownMenuCheckboxItem\n                key={column.id}\n                className=\"capitalize\"\n                checked={column.getIsVisible()}\n                onCheckedChange={(value) => column.toggleVisibility(!!value)}\n              >\n                {column.id}\n              </DropdownMenuCheckboxItem>\n            )\n          })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n"]}