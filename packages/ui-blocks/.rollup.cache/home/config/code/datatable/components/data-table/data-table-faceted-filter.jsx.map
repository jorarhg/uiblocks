{"version":3,"file":"data-table-faceted-filter.jsx","sourceRoot":"","sources":["data-table-faceted-filter.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport type * as React from \"react\"\nimport { CheckIcon, ListFilter } from \"lucide-react\"\nimport type { Column } from \"@tanstack/react-table\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n} from \"@/components/ui/command\"\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\nimport { Separator } from \"@/components/ui/separator\"\n\ninterface DataTableFacetedFilterProps<TData, TValue> {\n  column?: Column<TData, TValue>\n  title?: string\n  options: {\n    label: string\n    value: string\n    icon?: React.ComponentType<{ className?: string }>\n    count?: number\n  }[]\n}\n\nexport function DataTableFacetedFilter<TData, TValue>({\n  column,\n  title,\n  options,\n}: DataTableFacetedFilterProps<TData, TValue>) {\n  const facets = column?.getFacetedUniqueValues()\n  const selectedValues = new Set(column?.getFilterValue() as string[])\n\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button variant=\"outline\" size=\"sm\" className=\"h-8 border-dashed focus:outline-none focus:ring-0 focus:ring-offset-0\">\n          <ListFilter className=\"mr-2 h-4 w-4\" />\n          {title}\n          {selectedValues?.size > 0 && (\n            <>\n              <Separator orientation=\"vertical\" className=\"mx-2 h-4\" />\n              <Badge variant=\"secondary\" className=\"rounded-sm px-1 font-normal lg:hidden\">\n                {selectedValues.size}\n              </Badge>\n              <div className=\"hidden space-x-1 lg:flex\">\n                {selectedValues.size > 2 ? (\n                  <Badge variant=\"secondary\" className=\"rounded-sm px-1 font-normal\">\n                    {selectedValues.size} selected\n                  </Badge>\n                ) : (\n                  options\n                    .filter((option) => selectedValues.has(option.value))\n                    .map((option) => (\n                      <Badge variant=\"secondary\" key={option.value} className=\"rounded-sm px-1 font-normal\">\n                        {option.label}\n                      </Badge>\n                    ))\n                )}\n              </div>\n            </>\n          )}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[200px] p-0\" align=\"start\">\n        <Command>\n          <CommandInput placeholder={title} />\n          <CommandList>\n            <CommandEmpty>No results found.</CommandEmpty>\n            <CommandGroup>\n              {options.map((option) => {\n                const isSelected = selectedValues.has(option.value)\n                return (\n                  <CommandItem\n                    key={option.value}\n                    onSelect={() => {\n                      if (isSelected) {\n                        selectedValues.delete(option.value)\n                      } else {\n                        selectedValues.add(option.value)\n                      }\n                      const filterValues = Array.from(selectedValues)\n                      column?.setFilterValue(filterValues.length ? filterValues : undefined)\n                    }}\n                  >\n                    <div\n                      className={cn(\n                        \"mr-2 flex h-4 w-4 items-center justify-center rounded-sm border border-primary\",\n                        isSelected ? \"bg-primary text-primary-foreground\" : \"opacity-50 [&_svg]:invisible\",\n                      )}\n                    >\n                      <CheckIcon className=\"h-4 w-4\" />\n                    </div>\n                    {option.icon && <option.icon className=\"mr-2 h-4 w-4 text-muted-foreground\" />}\n                    <span>{option.label}</span>\n                    {option.count !== undefined && (\n                      <span className=\"ml-auto flex h-4 w-4 items-center justify-center font-mono text-xs\">\n                        {option.count}\n                      </span>\n                    )}\n                  </CommandItem>\n                )\n              })}\n            </CommandGroup>\n            {selectedValues.size > 0 && (\n              <>\n                <CommandSeparator />\n                <CommandGroup>\n                  <CommandItem\n                    onSelect={() => column?.setFilterValue(undefined)}\n                    className=\"justify-center text-center\"\n                  >\n                    Clear filters\n                  </CommandItem>\n                </CommandGroup>\n              </>\n            )}\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  )\n}\n"]}