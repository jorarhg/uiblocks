{"version":3,"file":"icon-formatter.js","sourceRoot":"","sources":["../../../src/formatters/types/icon-formatter.tsx"],"names":[],"mappings":";AAEA,OAAO,EAAE,UAAU,EAAE,gBAAgB,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,cAAc,CAAA;AAE1Q,MAAM,aAAa,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAC,eAAe,EAAE,gBAAgB,EAAC,OAAO,EAAE,KAAK,EAAC,cAAc,EAAE,WAAW,EAAC,UAAU,EAAE,OAAO,EAAC,cAAc,EAAE,WAAW,EAAC,MAAM,EAAE,IAAI,EAAC,OAAO,EAAE,KAAK,EAAC,KAAK,EAAE,GAAG,EAAC,MAAM,EAAE,IAAI,EAAC,MAAM,EAAE,IAAI,EAAC,OAAO,EAAE,KAAK,EAAC,UAAU,EAAE,QAAQ,EAAC,UAAU,EAAE,QAAQ,EAAC,MAAM,EAAE,IAAI,EAAC,UAAU,EAAE,QAAQ,EAAC,SAAS,EAAE,MAAM,EAAC,QAAQ,EAAE,MAAM,EAAC,WAAW,EAAE,QAAQ,EAAC,UAAU,EAAE,QAAQ,EAAC,QAAQ,EAAE,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,OAAO,EAAE,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,QAAQ,EAAE,MAAM,EAAC,QAAQ,EAAE,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,OAAO,EAAE,KAAK,EAAE,CAAA;AAE5gB,MAAM,CAAC,MAAM,aAAa,GAAsB,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE;;IACnE,MAAM,OAAO,GAAG,MAAA,KAAK,CAAC,SAAS,0CAAE,OAAO,CAAA;IACxC,MAAM,WAAW,GAAG,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,0CAAG,KAAK,CAAC,CAAA;IAC9C,MAAM,OAAO,GAAG,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,IAAI,MAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAA,IAAI,KAAK,CAAA;IAC3D,MAAM,aAAa,GAAG,aAAa,CAAC,OAAqC,CAAC,CAAA;IAC1E,IAAI,CAAC,aAAa;QAAE,OAAO,EAAE,OAAO,EAAE,eAAM,SAAS,EAAC,uBAAuB,kBAAS,EAAE,CAAA;IACxF,MAAM,iBAAiB,GAAG,CAAC,SAAS,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,aAAa,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,SAAS,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IACnI,OAAO,EAAE,OAAO,EAAE,KAAC,aAAa,IAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,kCAAO,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,GAAK,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,IAAM,EAAE,CAAA;AAC1H,CAAC,CAAA","sourcesContent":["import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\nimport { CircleIcon, CircleDashedIcon, Clock, CheckCircle, XCircle, AlertCircle, Star, Heart, Zap, User, Mail, Phone, Calendar, Settings, Home, Building, MapPin, Camera, FileText, Download, Upload, Edit, Trash2, Eye, Search, Filter, Plus, Minus } from 'lucide-react'\n\nconst ICON_REGISTRY = { 'circle': CircleIcon,'circle-dashed': CircleDashedIcon,'clock': Clock,'check-circle': CheckCircle,'x-circle': XCircle,'alert-circle': AlertCircle,'star': Star,'heart': Heart,'zap': Zap,'user': User,'mail': Mail,'phone': Phone,'calendar': Calendar,'settings': Settings,'home': Home,'building': Building,'map-pin': MapPin,'camera': Camera,'file-text': FileText,'download': Download,'upload': Upload,'edit': Edit,'trash': Trash2,'eye': Eye,'search': Search,'filter': Filter,'plus': Plus,'minus': Minus }\n\nexport const IconFormatter: FormatterFunction = ({ value, field }) => {\n  const options = field.formatter?.options\n  const valueConfig = options?.valueMap?.[value]\n  const iconKey = valueConfig?.icon || options?.icon || value\n  const IconComponent = ICON_REGISTRY[iconKey as keyof typeof ICON_REGISTRY]\n  if (!IconComponent) return { content: <span className='text-muted-foreground'>-</span> }\n  const combinedClassName = ['h-4 w-4', options?.iconClassName, valueConfig?.className, options?.className].filter(Boolean).join(' ')\n  return { content: <IconComponent className={combinedClassName} style={{ ...options?.style, ...valueConfig?.style }} /> }\n}\n"]}