{"version":3,"file":"actions-menu.js","sourceRoot":"","sources":["../../src/data-table/actions-menu.tsx"],"names":[],"mappings":";AACA,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAA;AACrC,OAAO,EAAE,YAAY,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,MAAM,qBAAqB,CAAA;AACxJ,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,cAAc,CAAA;AAa/E,MAAM,CAAC,MAAM,cAAc,GAAG;IAC5B,IAAI,EAAE,CAAC,MAA0B,EAAc,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;IACrH,IAAI,EAAE,CAAC,MAA0B,EAAc,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;IAChH,IAAI,EAAE,CAAC,MAA0B,EAAc,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;IAClH,OAAO,EAAE,CAAC,SAA6B,EAAc,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;IACjI,MAAM,EAAE,CAAC,QAA4B,EAAc,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,aAAsB,EAAE,CAAC;CAC9J,CAAA;AAED,MAAM,UAAU,WAAW,CAAC,EAAE,GAAG,EAAE,OAAO,GAAG,EAAE,EAAE,SAAS,GAAG,UAAU,EAAoB;IACzF,IAAI,CAAC,OAAO,CAAC,MAAM;QAAE,OAAO,IAAI,CAAA;IAChC,OAAO,CACL,MAAC,YAAY,eACX,KAAC,mBAAmB,IAAC,OAAO,kBAC1B,MAAC,MAAM,IAAC,OAAO,EAAC,OAAO,EAAC,SAAS,EAAC,aAAa,aAC7C,eAAM,SAAS,EAAC,SAAS,gCAAkB,EAC3C,KAAC,cAAc,IAAC,SAAS,EAAC,SAAS,GAAG,IAC/B,GACW,EACtB,MAAC,mBAAmB,IAAC,KAAK,EAAC,KAAK,EAAC,SAAS,EAAC,WAAW,aACpD,KAAC,iBAAiB,cAAE,SAAS,GAAqB,EAClD,KAAC,qBAAqB,KAAG,EACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;wBAAG,MAAM,UAAU,GAAG,OAAO,MAAM,CAAC,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;wBAAC,OAAO,CACjI,MAAC,gBAAgB,IAAiB,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,UAAU,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,CAAC,OAAO,KAAK,aAAa,CAAC,CAAC,CAAC,yCAAyC,CAAC,CAAC,CAAC,EAAE,aACrM,KAAC,MAAM,CAAC,IAAI,IAAC,SAAS,EAAC,cAAc,GAAG,EAAC,MAAM,CAAC,KAAK,KADhC,MAAM,CAAC,EAAE,CAEb,CACpB,CAAA;oBAAC,CAAC,CAAC,IACgB,IACT,CAChB,CAAA;AACH,CAAC","sourcesContent":["import * as React from 'react'\nimport { Button } from '../ui/button'\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from '../ui/dropdown-menu'\nimport { MoreHorizontal, Edit, Trash2, Eye, Copy, Archive } from 'lucide-react'\n\nexport interface ActionItem {\n  id: string\n  label: string\n  icon: React.ComponentType<{ className?: string }>\n  onClick: (row: any) => void\n  variant?: 'default' | 'destructive'\n  disabled?: boolean | ((row: any) => boolean)\n}\n\ninterface ActionsMenuProps { row: any; actions?: ActionItem[]; menuLabel?: string }\n\nexport const defaultActions = {\n  view: (onView: (row: any) => void): ActionItem => ({ id: 'view', label: 'Ver detalles', icon: Eye, onClick: onView }),\n  edit: (onEdit: (row: any) => void): ActionItem => ({ id: 'edit', label: 'Editar', icon: Edit, onClick: onEdit }),\n  copy: (onCopy: (row: any) => void): ActionItem => ({ id: 'copy', label: 'Duplicar', icon: Copy, onClick: onCopy }),\n  archive: (onArchive: (row: any) => void): ActionItem => ({ id: 'archive', label: 'Archivar', icon: Archive, onClick: onArchive }),\n  delete: (onDelete: (row: any) => void): ActionItem => ({ id: 'delete', label: 'Eliminar', icon: Trash2, onClick: onDelete, variant: 'destructive' as const }),\n}\n\nexport function ActionsMenu({ row, actions = [], menuLabel = 'Acciones' }: ActionsMenuProps) {\n  if (!actions.length) return null\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant='ghost' className='h-8 w-8 p-0'>\n          <span className='sr-only'>Abrir men√∫</span>\n          <MoreHorizontal className='h-4 w-4' />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align='end' className='w-[160px]'>\n        <DropdownMenuLabel>{menuLabel}</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        {actions.map(action => { const isDisabled = typeof action.disabled === 'function' ? action.disabled(row) : action.disabled; return (\n          <DropdownMenuItem key={action.id} onClick={() => !isDisabled && action.onClick(row)} disabled={isDisabled} className={action.variant === 'destructive' ? 'text-destructive focus:text-destructive' : ''}>\n            <action.icon className='mr-2 h-4 w-4' />{action.label}\n          </DropdownMenuItem>\n        ) })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n"]}