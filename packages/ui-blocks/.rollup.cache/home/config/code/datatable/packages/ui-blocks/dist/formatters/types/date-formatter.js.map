{"version":3,"file":"date-formatter.js","sourceRoot":"","sources":["../../../src/formatters/types/date-formatter.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\n\nexport const DateFormatter: FormatterFunction = ({ value, field }) => {\n  const options = field.formatter?.options\n  if (!value) return { content: <span className=\"text-muted-foreground\">-</span> }\n  const date = new Date(value)\n  if (isNaN(date.getTime())) return { content: <span className={options?.className}>{value}</span> }\n  let formattedDate: string\n  const locale = options?.locale || 'es-ES'\n  switch (options?.format) {\n    case 'short': formattedDate = date.toLocaleDateString(locale); break\n    case 'medium': formattedDate = date.toLocaleDateString(locale,{year:'numeric',month:'short',day:'numeric'}); break\n    case 'long': formattedDate = date.toLocaleDateString(locale,{year:'numeric',month:'long',day:'numeric',weekday:'long'}); break\n    case 'relative': formattedDate = formatRelativeDate(date); break\n    case 'custom': formattedDate = formatCustomDate(date, options?.customFormat || 'DD/MM/YYYY'); break\n    default: formattedDate = date.toISOString().split('T')[0]\n  }\n  return { content: <span className={options?.className} title={date.toLocaleString(locale)}>{formattedDate}</span>, style: options?.style }\n}\nfunction formatRelativeDate(date: Date){const now=new Date();const diffInDays=Math.floor((now.getTime()-date.getTime())/(1000*60*60*24));if(diffInDays===0)return 'Hoy';if(diffInDays===1)return 'Ayer';if(diffInDays===-1)return 'Mañana';if(diffInDays>1&&diffInDays<=7)return `Hace ${diffInDays} días`;if(diffInDays< -1&&diffInDays>= -7)return `En ${Math.abs(diffInDays)} días`;return date.toLocaleDateString('es-ES')}\nfunction formatCustomDate(date:Date,pattern:string){const day=date.getDate().toString().padStart(2,'0');const month=(date.getMonth()+1).toString().padStart(2,'0');const year=date.getFullYear().toString();const shortYear=year.slice(-2);const hours=date.getHours().toString().padStart(2,'0');const minutes=date.getMinutes().toString().padStart(2,'0');const seconds=date.getSeconds().toString().padStart(2,'0');const monthNames=['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'];const monthNamesShort=['Ene','Feb','Mar','Abr','May','Jun','Jul','Ago','Sep','Oct','Nov','Dic'];return pattern.replace(/YYYY/g,year).replace(/YY/g,shortYear).replace(/MMMM/g,monthNames[date.getMonth()]).replace(/MMM/g,monthNamesShort[date.getMonth()]).replace(/MM/g,month).replace(/M/g,(date.getMonth()+1).toString()).replace(/DD/g,day).replace(/D/g,date.getDate().toString()).replace(/HH/g,hours).replace(/H/g,date.getHours().toString()).replace(/mm/g,minutes).replace(/m/g,date.getMinutes().toString()).replace(/ss/g,seconds).replace(/s/g,date.getSeconds().toString())}\n"]}