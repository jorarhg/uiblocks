{"version":3,"file":"data-table-view-options.js","sourceRoot":"","sources":["../../src/data-table/data-table-view-options.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAA;AAEvC,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAA;AACrC,OAAO,EAAE,YAAY,EAAE,wBAAwB,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,MAAM,qBAAqB,CAAA;AAGhK,MAAM,UAAU,oBAAoB,CAAQ,EAAE,KAAK,EAAoC;IACrF,yEAAyE;IACzE,MAAM,OAAO,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAA;IACrE,OAAO,CACL,MAAC,YAAY,eACX,KAAC,mBAAmB,IAAC,OAAO,kBAC1B,MAAC,MAAM,IAAC,OAAO,EAAC,SAAS,EAAC,IAAI,EAAC,IAAI,EAAC,SAAS,EAAC,aAAa,aAAC,KAAC,QAAQ,IAAC,SAAS,EAAC,SAAS,GAAG,EAAA,eAAM,SAAS,EAAC,SAAS,6BAAoB,IAAS,GAC9H,EACtB,MAAC,mBAAmB,IAAC,KAAK,EAAC,KAAK,EAAC,SAAS,EAAC,MAAM,aAC/C,KAAC,iBAAiB,IAAC,SAAS,EAAC,SAAS,+BAAmC,EACzE,KAAC,qBAAqB,KAAG,EACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAA,EAAE,CAAC,CACpB,KAAC,wBAAwB,IAAiB,OAAO,EAAE,MAAM,CAAC,YAAY,EAAE,EAAE,eAAe,EAAE,CAAC,KAAK,EAAC,EAAE,CAAA,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,SAAS,EAAC,YAAY,YACzJ,MAAM,CAAC,EAAE,IADmB,MAAM,CAAC,EAAE,CAEb,CAC5B,CAAC,IACkB,IACT,CAChB,CAAA;AACH,CAAC","sourcesContent":["import { Settings } from 'lucide-react'\nimport type { Table } from '@tanstack/react-table'\nimport { Button } from '../ui/button'\nimport { DropdownMenu, DropdownMenuCheckboxItem, DropdownMenuContent, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from '../ui/dropdown-menu'\n\ninterface DataTableViewOptionsProps<TData>{ table: Table<TData> }\nexport function DataTableViewOptions<TData>({ table }: DataTableViewOptionsProps<TData>){\n  // Incluir columnas con accessorKey (accessorFn es undefined en ese caso)\n  const columns = table.getAllColumns().filter(col => col.getCanHide())\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant='outline' size='sm' className='h-8 w-8 p-0'><Settings className='h-4 w-4' /><span className='sr-only'>View options</span></Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align='end' className='w-44'>\n        <DropdownMenuLabel className='text-xs'>Toggle columns</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        {columns.map(column=> (\n          <DropdownMenuCheckboxItem key={column.id} checked={column.getIsVisible()} onCheckedChange={(value)=>column.toggleVisibility(!!value)} className='capitalize'>\n            {column.id}\n          </DropdownMenuCheckboxItem>\n        ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n"]}