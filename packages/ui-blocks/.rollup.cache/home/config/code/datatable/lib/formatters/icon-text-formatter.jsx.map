{"version":3,"file":"icon-text-formatter.jsx","sourceRoot":"","sources":["icon-text-formatter.tsx"],"names":[],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { FormatterFunction } from '@/types/formatters'\nimport { applyTemplate } from './index'\nimport { \n  CircleIcon, \n  CircleDashedIcon, \n  Clock,\n  CheckCircle,\n  XCircle,\n  AlertCircle,\n  Star,\n  Heart,\n  Zap,\n  User,\n  Mail,\n  Phone,\n  Calendar,\n  Settings,\n  Home,\n  Building,\n  MapPin,\n  Camera,\n  FileText,\n  Download,\n  Upload,\n  Edit,\n  Trash2,\n  Eye,\n  Search,\n  Filter,\n  Plus,\n  Minus\n} from 'lucide-react'\n\n// Mismo registry que icon-formatter\nconst ICON_REGISTRY = {\n  'circle': CircleIcon,\n  'circle-dashed': CircleDashedIcon,\n  'clock': Clock,\n  'check-circle': CheckCircle,\n  'x-circle': XCircle,\n  'alert-circle': AlertCircle,\n  'star': Star,\n  'heart': Heart,\n  'zap': Zap,\n  'user': User,\n  'mail': Mail,\n  'phone': Phone,\n  'calendar': Calendar,\n  'settings': Settings,\n  'home': Home,\n  'building': Building,\n  'map-pin': MapPin,\n  'camera': Camera,\n  'file-text': FileText,\n  'download': Download,\n  'upload': Upload,\n  'edit': Edit,\n  'trash': Trash2,\n  'eye': Eye,\n  'search': Search,\n  'filter': Filter,\n  'plus': Plus,\n  'minus': Minus\n}\n\n/**\n * Formatter que muestra un icono junto con texto\n */\nexport const IconTextFormatter: FormatterFunction = ({ value, field, record }) => {\n  const options = field.formatter?.options\n  \n  // Buscar configuración específica para este valor\n  const valueConfig = options?.valueMap?.[value]\n  \n  // Determinar el texto a mostrar\n  let displayText = valueConfig?.label || value\n  if (options?.template) {\n    displayText = applyTemplate(options.template, value, record)\n  }\n  \n  // Determinar el icono\n  const iconKey = valueConfig?.icon || options?.icon\n  const IconComponent = iconKey ? ICON_REGISTRY[iconKey as keyof typeof ICON_REGISTRY] : null\n  \n  // Determinar posición del icono\n  const iconPosition = options?.iconPosition || 'left'\n  \n  // Combinar clases CSS\n  const textClassName = [\n    valueConfig?.className,\n    options?.className\n  ].filter(Boolean).join(' ')\n  \n  const iconClassName = [\n    'h-4 w-4',\n    options?.iconClassName\n  ].filter(Boolean).join(' ')\n  \n  const containerClassName = 'flex items-center gap-2'\n  \n  return {\n    content: (\n      <div className={containerClassName}>\n        {IconComponent && iconPosition === 'left' && (\n          <IconComponent className={iconClassName} />\n        )}\n        <span className={textClassName}>\n          {displayText}\n        </span>\n        {IconComponent && iconPosition === 'right' && (\n          <IconComponent className={iconClassName} />\n        )}\n      </div>\n    ),\n    style: { ...options?.style, ...valueConfig?.style }\n  }\n}\n"]}