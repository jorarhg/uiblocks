{"version":3,"file":"data-table.js","sourceRoot":"","sources":["../../src/data-table/data-table.tsx"],"names":[],"mappings":"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","sourcesContent":["// Limpio: versión con export explícito de DataTableProps y DnD robusto\nimport * as React from 'react'\nimport {\n  flexRender,\n  getCoreRowModel,\n  getFacetedRowModel,\n  getFacetedUniqueValues,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  getGroupedRowModel,\n  getExpandedRowModel,\n  useReactTable,\n  type ColumnDef,\n  type ColumnFiltersState,\n  type SortingState,\n  type VisibilityState,\n  type GroupingState,\n  type Row,\n  type Cell,\n} from '@tanstack/react-table'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../ui/table'\nimport { DataTableToolbar } from './data-table-toolbar'\nimport { DataTablePagination } from './data-table-pagination'\nimport { GripVertical } from 'lucide-react'\n// Valor por defecto para la transición FLIP si no se pasa prop\nconst DEFAULT_COLUMN_FLIP_TRANSITION = 'transform 220ms cubic-bezier(.22,.61,.36,1)'\n\nexport interface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[]\n  data: TData[]\n  searchKey?: string\n  searchPlaceholder?: string\n  filters?: { columnId: string; title: string; options: { label: string; value: string; icon?: React.ComponentType<{ className?: string }>; count?: number }[] }[]\n  enableColumnReorder?: boolean\n  enableGrouping?: boolean\n  groupableColumns?: string[]\n  /** Permite personalizar la transición FLIP usada en el preview de reordenamiento (e.g. 'transform 300ms ease'). */\n  reorderTransition?: string\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n  searchKey = 'title',\n  searchPlaceholder,\n  filters,\n  enableColumnReorder = false,\n  enableGrouping = false,\n  groupableColumns,\n  reorderTransition,\n}: DataTableProps<TData, TValue>) {\n  const [rowSelection, setRowSelection] = React.useState({})\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({})\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([])\n  const [sorting, setSorting] = React.useState<SortingState>([])\n  const [columnOrder, setColumnOrder] = React.useState<string[]>([])\n  const [grouping, setGrouping] = React.useState<GroupingState>([])\n  const headerContainerRef = React.useRef<HTMLTableSectionElement | null>(null)\n  const dragSourceIdRef = React.useRef<string | null>(null)\n  const initialLayoutRef = React.useRef<{ baseLeft: number; widths: Record<string, number>; lefts: Record<string, number> } | null>(null)\n  const lastPreviewTargetRef = React.useRef<string | null>(null)\n  const isMountedRef = React.useRef(false)\n  const pendingRafRef = React.useRef<number | null>(null)\n  const rafTargetRef = React.useRef<string | null>(null)\n  const keyboardSourceIdRef = React.useRef<string | null>(null)\n  const keyboardTargetIdRef = React.useRef<string | null>(null)\n  const focusAfterReorderRef = React.useRef<string | null>(null)\n  const flipTransition = reorderTransition || DEFAULT_COLUMN_FLIP_TRANSITION\n\n  function clearPreviewTransforms(){\n    if(!headerContainerRef.current) return\n    headerContainerRef.current.querySelectorAll('[data-col-id]')?.forEach(el=>{\n      (el as HTMLElement).style.transform = ''\n      ;(el as HTMLElement).style.transition = ''\n  delete (el as HTMLElement).dataset.flipInit\n    })\n  }\n\n  function scheduleFocusGrip(columnId: string){\n    focusAfterReorderRef.current = columnId\n    // doble RAF para asegurar repaint tras reordenamiento\n    requestAnimationFrame(()=>{\n      requestAnimationFrame(()=>{\n        if(!headerContainerRef.current) return\n        const grip = headerContainerRef.current.querySelector(`[data-grip-for=\"${columnId}\"]`) as HTMLElement | null\n        if(grip){\n          grip.focus({ preventScroll: true })\n          focusAfterReorderRef.current = null\n        }\n      })\n    })\n  }\n\n  function captureInitialLayout(){\n    if(!headerContainerRef.current) return\n    const cells = Array.from(headerContainerRef.current.querySelectorAll('[data-col-id]')) as HTMLElement[]\n    if(!cells.length) return\n    const widths: Record<string,number> = {}\n    const lefts: Record<string,number> = {}\n    let baseLeft = Infinity\n    cells.forEach(el=>{\n      const id = el.dataset.colId!\n      const rect = el.getBoundingClientRect()\n      widths[id] = rect.width\n      lefts[id] = rect.left\n      if(rect.left < baseLeft) baseLeft = rect.left\n    })\n    initialLayoutRef.current = { baseLeft, widths, lefts }\n  }\n\n  function applyPreview(targetId: string){\n    if(!enableColumnReorder) return\n    const sourceId = dragSourceIdRef.current\n    if(!sourceId) { clearPreviewTransforms(); return }\n    // Evitar recomputación si ya estamos sobre el mismo destino\n    if(targetId === lastPreviewTargetRef.current) return\n    if(sourceId === targetId){\n      lastPreviewTargetRef.current = targetId\n      clearPreviewTransforms();\n      return\n    }\n    const layout = initialLayoutRef.current\n    if(!layout) return\n    // construir orden actual real\n    const currentOrder = (columnOrder.length ? columnOrder : table.getAllLeafColumns().map(c=>c.id))\n    const next = [...currentOrder]\n    const from = next.indexOf(sourceId)\n    const to = next.indexOf(targetId)\n    if(from === -1 || to === -1) return\n    next.splice(from,1)\n    next.splice(to,0,sourceId)\n    // Calcular posiciones objetivo acumulando widths\n    let accLeft = layout.baseLeft\n    const targetLeftMap: Record<string, number> = {}\n    next.forEach(id=>{\n      targetLeftMap[id] = accLeft\n      accLeft += layout.widths[id]\n    })\n    // Aplicar transform FLIP (currentLeft -> targetLeft)\n    if(!headerContainerRef.current) return\n    headerContainerRef.current.querySelectorAll('[data-col-id]')?.forEach(el=>{\n      const node = el as HTMLElement\n      const id = node.dataset.colId!\n      const currentLeft = layout.lefts[id]\n      const targetLeft = targetLeftMap[id]\n      if(currentLeft == null || targetLeft == null) return\n      const dx = targetLeft - currentLeft\n      const desired = `translateX(${dx}px)`\n      if(node.style.transform === desired) return // no re-disparar transición\n      // Sólo setear transición la primera vez\n      if(!node.dataset.flipInit){\n        node.style.willChange = 'transform'\n        node.dataset.flipInit = '1'\n      }\n  node.style.transition = flipTransition\n      node.style.transform = desired\n    })\n    lastPreviewTargetRef.current = targetId\n  }\n\n  function schedulePreview(targetId: string){\n    if(pendingRafRef.current){\n      rafTargetRef.current = targetId\n      return\n    }\n    rafTargetRef.current = targetId\n    pendingRafRef.current = requestAnimationFrame(()=>{\n      const t = rafTargetRef.current\n      if(t) applyPreview(t)\n      pendingRafRef.current = null\n    })\n  }\n\n  function commitReorder(sourceId: string, targetId: string){\n    if(sourceId === targetId) return\n    setColumnOrder(prev => {\n      const current = prev.length ? prev : table.getAllLeafColumns().map(c=>c.id)\n      const next = [...current]\n      const from = next.indexOf(sourceId)\n      const to = next.indexOf(targetId)\n      if(from === -1 || to === -1) return current\n      next.splice(from,1)\n      next.splice(to,0,sourceId)\n      scheduleFocusGrip(sourceId)\n      return next\n    })\n  }\n\n  React.useEffect(()=>{\n    return ()=>{ clearPreviewTransforms() }\n  },[])\n\n  React.useEffect(()=>{\n    isMountedRef.current = true\n    return () => { isMountedRef.current = false }\n  },[])\n\n  // Inicializar orden al montar / cambiar columnas\n  React.useEffect(() => {\n    if (columnOrder.length === 0) {\n      setColumnOrder(\n        columns\n          .map((c: any) => c.id ?? c.accessorKey)\n          .filter(Boolean)\n      )\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [columns])\n\n  const table = useReactTable({\n    data,\n    columns,\n    state: { sorting, columnVisibility, rowSelection, columnFilters, columnOrder, grouping },\n    enableRowSelection: true,\n    enableGrouping,\n    onRowSelectionChange: setRowSelection,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    onColumnVisibilityChange: setColumnVisibility,\n    onColumnOrderChange: setColumnOrder,\n    onGroupingChange: setGrouping,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFacetedRowModel: getFacetedRowModel(),\n    getFacetedUniqueValues: getFacetedUniqueValues(),\n    ...(enableGrouping\n      ? { getGroupedRowModel: getGroupedRowModel(), getExpandedRowModel: getExpandedRowModel() }\n      : {}),\n  })\n\n  function handleHeaderDrop(\n    e: React.DragEvent<HTMLTableCellElement>,\n    targetId: string\n  ) {\n    if (!enableColumnReorder) return\n    e.preventDefault()\n  const sourceId = e.dataTransfer.getData('text/plain')\n    clearPreviewTransforms()\n    dragSourceIdRef.current = null\n    initialLayoutRef.current = null\n  lastPreviewTargetRef.current = null\n    if (!sourceId || sourceId === targetId) return\n  if(!isMountedRef.current) return\n    setColumnOrder(prev => {\n      const current = prev.length\n        ? prev\n        : table.getAllLeafColumns().map(c => c.id)\n      const next = [...current]\n      const from = next.indexOf(sourceId)\n      const to = next.indexOf(targetId)\n      if (from === -1 || to === -1) return current\n      next.splice(from, 1)\n      next.splice(to, 0, sourceId)\n      scheduleFocusGrip(sourceId)\n      return next\n    })\n  }\n\n  function renderCell(row: Row<TData>, cell: Cell<TData, unknown>) {\n    if (enableGrouping) {\n      if (cell.getIsGrouped()) {\n        return (\n          <button\n            onClick={row.getToggleExpandedHandler()}\n            className='flex items-center gap-2 font-medium'\n          >\n            <span className='inline-block w-4'>\n              {row.getIsExpanded() ? '−' : '+'}\n            </span>\n            {flexRender(cell.column.columnDef.cell, cell.getContext())}\n            <span className='text-xs text-muted-foreground'>\n              ({row.subRows.length})\n            </span>\n          </button>\n        )\n      }\n      if (cell.getIsAggregated()) {\n        return flexRender(\n          cell.column.columnDef.aggregatedCell ??\n            cell.column.columnDef.cell,\n          cell.getContext()\n        )\n      }\n      if (cell.getIsPlaceholder()) return null\n    }\n    return flexRender(cell.column.columnDef.cell, cell.getContext())\n  }\n\n  return (\n    <div className='space-y-4'>\n      <DataTableToolbar\n        table={table}\n        searchKey={searchKey}\n        searchPlaceholder={searchPlaceholder}\n        filters={filters}\n        enableGrouping={enableGrouping}\n        grouping={grouping}\n        setGrouping={setGrouping}\n        groupableColumns={groupableColumns}\n      />\n      <div className='rounded-md border'>\n        <Table>\n          <TableHeader ref={headerContainerRef}>\n            {table.getHeaderGroups().map(hg => (\n              <TableRow key={hg.id}>\n                {hg.headers.map(header => {\n                  const id = header.column.id\n                  const canReorder =\n                    enableColumnReorder &&\n                    header.column.getCanHide() &&\n                    !(header.column.columnDef as any)?.meta?.disableReorder\n                  return (\n                    <TableHead\n                      key={header.id}\n                      data-col-id={id}\n                      onDragOver={(e: React.DragEvent<HTMLTableCellElement>) => { if (enableColumnReorder && dragSourceIdRef.current){ e.preventDefault(); schedulePreview(id) } }}\n                      onDragEnter={(e: React.DragEvent<HTMLTableCellElement>)=>{ if(enableColumnReorder && dragSourceIdRef.current && e.currentTarget === e.target){ schedulePreview(id) } }}\n                      onDrop={(e: React.DragEvent<HTMLTableCellElement>) => handleHeaderDrop(e, id)}\n                      className={\n                        canReorder ? 'relative select-none' : undefined\n                      }\n                    >\n                      {canReorder && (\n                        <span\n                          className='absolute left-1 top-1/2 -translate-y-1/2 inline-flex items-center p-0.5 rounded hover:bg-muted'\n                          draggable\n                          data-grip-for={id}\n                          onDragStart={(e)=>{\n                            if(!canReorder) return\n                            dragSourceIdRef.current = id\n                            keyboardSourceIdRef.current = id\n                            e.dataTransfer.effectAllowed = 'move'\n                            e.dataTransfer.setData('text/plain', id)\n                            captureInitialLayout()\n                          }}\n                          onDragEnd={()=>{ clearPreviewTransforms(); dragSourceIdRef.current=null; initialLayoutRef.current=null }}\n                          onMouseEnter={e=>{ (e.currentTarget as HTMLElement).style.cursor='move' }}\n                          onFocus={e=>{ (e.currentTarget as HTMLElement).style.cursor='move'; keyboardSourceIdRef.current = id }}\n                          tabIndex={0}\n                          role='button'\n                          aria-label='Reordenar columna'\n                          onKeyDown={(e)=>{\n                            if(!enableColumnReorder) return\n                            const sourceId = keyboardSourceIdRef.current || id\n                            const order = (columnOrder.length ? columnOrder : table.getAllLeafColumns().map(c=>c.id))\n                            const reorderable = order.filter(colId=>{\n                              const col = table.getAllLeafColumns().find(c=>c.id===colId)\n                              return col && col.getCanHide() && !(col.columnDef as any)?.meta?.disableReorder\n                            })\n                            const currentIndex = reorderable.indexOf(sourceId)\n                            if(e.key === 'ArrowRight'){\n                              e.preventDefault()\n                              if(currentIndex > -1 && currentIndex < reorderable.length - 1){\n                                const target = reorderable[currentIndex+1]\n                                dragSourceIdRef.current = sourceId\n                                captureInitialLayout()\n                                schedulePreview(target)\n                                keyboardTargetIdRef.current = target\n                              }\n                            } else if(e.key === 'ArrowLeft'){\n                              e.preventDefault()\n                              if(currentIndex > 0){\n                                const target = reorderable[currentIndex-1]\n                                dragSourceIdRef.current = sourceId\n                                captureInitialLayout()\n                                schedulePreview(target)\n                                keyboardTargetIdRef.current = target\n                              }\n                            } else if(e.key === 'Enter' || e.key === ' '){\n                              if(keyboardTargetIdRef.current){\n                                e.preventDefault()\n                                commitReorder(sourceId, keyboardTargetIdRef.current)\n                                clearPreviewTransforms()\n                                dragSourceIdRef.current = null\n                                keyboardSourceIdRef.current = null\n                                keyboardTargetIdRef.current = null\n                              }\n                            } else if(e.key === 'Escape'){\n                              clearPreviewTransforms()\n                              keyboardTargetIdRef.current = null\n                              dragSourceIdRef.current = null\n                            }\n                          }}\n                        >\n                          <GripVertical className='h-3 w-3 opacity-60' />\n                        </span>\n                      )}\n                      <div className={canReorder ? 'pl-4' : undefined}>\n                        {header.isPlaceholder\n                          ? null\n                          : flexRender(\n                              header.column.columnDef.header,\n                              header.getContext()\n                            )}\n                      </div>\n                    </TableHead>\n                  )\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map(row => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && 'selected'}\n                >\n                  {row.getVisibleCells().map(cell => (\n                    <TableCell key={cell.id}>\n                      {renderCell(row as Row<TData>, cell as Cell<TData, unknown>)}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell colSpan={columns.length} className='h-24 text-center'>\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <DataTablePagination table={table} />\n    </div>\n  )\n}\n"]}