{"version":3,"file":"link-formatter.js","sourceRoot":"","sources":["../../../src/formatters/types/link-formatter.tsx"],"names":[],"mappings":";AAEA,OAAO,EAAE,aAAa,EAAE,MAAM,YAAY,CAAA;AAE1C,MAAM,CAAC,MAAM,aAAa,GAAsB,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE;;IAC3E,MAAM,OAAO,GAAG,MAAA,KAAK,CAAC,SAAS,0CAAE,OAAO,CAAA;IACxC,IAAI,CAAC,KAAK;QAAE,OAAO,EAAE,OAAO,EAAE,eAAM,SAAS,EAAC,uBAAuB,kBAAS,EAAE,CAAA;IAChF,IAAI,IAAY,CAAA;IAChB,IAAI,OAAO,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAA,KAAK,UAAU;QAAE,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;SACtE,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI;QAAE,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;;QACpE,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA;IACzB,IAAI,WAAW,GAAG,KAAK,CAAA;IACvB,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ;QAAE,WAAW,GAAG,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;IACnF,MAAM,MAAM,GAAG,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,KAAI,OAAO,CAAA;IACzC,OAAO,EAAE,OAAO,EAAE,YAAG,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,qBAAqB,CAAA,CAAC,CAAA,SAAS,EAAE,SAAS,EAAE,mBAAmB,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,aAAa,KAAI,eAAe,IAAI,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,KAAI,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,YAAG,WAAW,GAAK,EAAE,CAAA;AAChQ,CAAC,CAAA","sourcesContent":["import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\nimport { applyTemplate } from '../helpers'\n\nexport const LinkFormatter: FormatterFunction = ({ value, field, record }) => {\n  const options = field.formatter?.options\n  if (!value) return { content: <span className='text-muted-foreground'>-</span> }\n  let href: string\n  if (typeof options?.href === 'function') href = options.href(value, record)\n  else if (options?.href) href = applyTemplate(options.href, value, record)\n  else href = String(value)\n  let displayText = value\n  if (options?.template) displayText = applyTemplate(options.template, value, record)\n  const target = options?.target || '_self'\n  return { content: <a href={href} target={target} rel={target === '_blank' ? 'noopener noreferrer':undefined} className={`hover:underline ${options?.linkClassName || 'text-blue-600'} ${options?.className || ''}`} style={options?.style}>{displayText}</a> }\n}\n"]}