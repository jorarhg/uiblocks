{"version":3,"file":"data-table-faceted-filter.js","sourceRoot":"","sources":["../../src/data-table/data-table-faceted-filter.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;AAEpD,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAA;AACnC,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAA;AACrC,OAAO,EAAE,EAAE,EAAE,MAAM,uBAAuB,CAAA;AAE1C,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,MAAM,eAAe,CAAA;AAGvE,MAAM,UAAU,sBAAsB,CAAgB,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAA8C;IAC1H,MAAM,cAAc,GAAG,IAAI,GAAG,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,cAAc,EAAc,CAAC,CAAA;IACpE,OAAO,CACL,MAAC,OAAO,eACN,KAAC,cAAc,IAAC,OAAO,kBACrB,MAAC,MAAM,IAAC,OAAO,EAAC,SAAS,EAAC,IAAI,EAAC,IAAI,EAAC,SAAS,EAAC,mBAAmB,aAC/D,KAAC,UAAU,IAAC,SAAS,EAAC,cAAc,GAAG,EAAC,KAAK,EAC5C,CAAA,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,IAAI,IAAC,CAAC,IAAI,CACzB,KAAC,KAAK,IAAC,OAAO,EAAC,WAAW,EAAC,SAAS,EAAC,kCAAkC,YAAE,cAAc,CAAC,IAAI,GAAS,CACtG,IACM,GACM,EACjB,KAAC,cAAc,IAAC,SAAS,EAAC,UAAU,EAAC,KAAK,EAAC,OAAO,YAChD,eAAK,SAAS,EAAC,4CAA4C,aACxD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAA,EAAE;4BAAE,MAAM,UAAU,GAAG,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;4BAAC,OAAO,CACjF,kBAA2B,OAAO,EAAE,GAAE,EAAE,GAAE,IAAG,UAAU;oCAAE,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;oCAAM,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,IAAI,GAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,cAAc,CAAC,IAAI,CAAC,MAAM,CAAA,CAAC,CAAC,IAAI,CAAA,CAAC,CAAC,SAAS,CAAC,CAAA,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,CAAC,6EAA6E,EAAE,UAAU,IAAI,WAAW,CAAC,aACzV,eAAM,SAAS,EAAE,EAAE,CAAC,2EAA2E,EAAE,UAAU,CAAC,CAAC,CAAC,oCAAoC,CAAA,CAAC,CAAA,YAAY,CAAC,YAAE,KAAC,SAAS,IAAC,SAAS,EAAC,SAAS,GAAG,GAAO,EACzM,MAAM,CAAC,IAAI,IAAI,KAAC,MAAM,CAAC,IAAI,IAAC,SAAS,EAAC,mCAAmC,GAAG,EAC7E,eAAM,SAAS,EAAC,QAAQ,YAAE,MAAM,CAAC,KAAK,GAAQ,EAC7C,MAAM,CAAC,KAAK,KAAG,SAAS,IAAI,eAAM,SAAS,EAAC,+BAA+B,YAAE,MAAM,CAAC,KAAK,GAAQ,KAJvF,MAAM,CAAC,KAAK,CAKhB,CACV,CAAA;wBAAA,CAAC,CAAC,EACF,cAAc,CAAC,IAAI,GAAC,CAAC,IAAI,iBAAQ,OAAO,EAAE,GAAE,EAAE,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,cAAc,CAAC,SAAS,CAAC,EAAE,SAAS,EAAC,yCAAyC,8BAAuB,IACxJ,GACS,IACT,CACX,CAAA;AACH,CAAC","sourcesContent":["import { CheckIcon, ListFilter } from 'lucide-react'\nimport type { Column } from '@tanstack/react-table'\nimport { Badge } from '../ui/badge'\nimport { Button } from '../ui/button'\nimport { cn } from '../internal/lib/utils'\nimport * as React from 'react'\nimport { Popover, PopoverContent, PopoverTrigger } from '../ui/popover'\n\ninterface DataTableFacetedFilterProps<TData, TValue>{ column?: Column<TData, TValue>; title?: string; options:{ label:string; value:string; icon?: React.ComponentType<{className?:string}>; count?: number }[] }\nexport function DataTableFacetedFilter<TData, TValue>({ column, title, options }: DataTableFacetedFilterProps<TData, TValue>){\n  const selectedValues = new Set(column?.getFilterValue() as string[])\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button variant='outline' size='sm' className='h-8 border-dashed'>\n          <ListFilter className='mr-2 h-4 w-4' />{title}\n          {selectedValues?.size>0 && (\n            <Badge variant='secondary' className='ml-2 rounded-sm px-1 font-normal'>{selectedValues.size}</Badge>\n          )}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className='w-56 p-2' align='start'>\n        <div className='flex flex-col gap-1 max-h-60 overflow-auto'>\n          {options.map(option=>{ const isSelected = selectedValues.has(option.value); return (\n            <button key={option.value} onClick={()=>{ if(isSelected) selectedValues.delete(option.value); else selectedValues.add(option.value); const next=Array.from(selectedValues); column?.setFilterValue(next.length? next: undefined) }} className={cn('flex items-center gap-2 rounded px-2 py-1 text-left text-xs hover:bg-accent', isSelected && 'bg-accent')}>\n              <span className={cn('flex h-4 w-4 items-center justify-center rounded-sm border border-primary', isSelected ? 'bg-primary text-primary-foreground':'opacity-50')}><CheckIcon className='h-3 w-3' /></span>\n              {option.icon && <option.icon className='h-3.5 w-3.5 text-muted-foreground' />}\n              <span className='flex-1'>{option.label}</span>\n              {option.count!==undefined && <span className='ml-auto font-mono text-[10px]'>{option.count}</span>}\n            </button>\n          )})}\n          {selectedValues.size>0 && <button onClick={()=>column?.setFilterValue(undefined)} className='mt-1 rounded bg-muted px-2 py-1 text-xs'>Clear filters</button>}\n        </div>\n      </PopoverContent>\n    </Popover>\n  )\n}\n"]}