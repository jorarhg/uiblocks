{"version":3,"file":"command-palette-example.js","sourceRoot":"","sources":["../../src/examples/command-palette-example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAA;AACnI,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAA;AAErC,0DAA0D;AAC1D,MAAM,UAAU,qBAAqB;IACnC,MAAM,CAAC,IAAI,EAAC,OAAO,CAAC,GAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;IAC1C,KAAK,CAAC,SAAS,CAAC,GAAE,EAAE,GAAE,MAAM,IAAI,GAAC,CAAC,CAAe,EAAC,EAAE,GAAE,IAAG,CAAC,CAAC,GAAG,KAAG,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,EAAC,CAAC;QAAC,CAAC,CAAC,cAAc,EAAE,CAAC;QAAC,OAAO,CAAC,CAAC,CAAA,EAAE,CAAA,CAAC,CAAC,CAAC,CAAA;IAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAC,IAAI,CAAC,CAAC,CAAC,OAAO,GAAE,EAAE,CAAA,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAC,IAAI,CAAC,CAAA,CAAC,CAAC,EAAC,EAAE,CAAC,CAAA;IAC/O,OAAO,CACL,8BACE,MAAC,MAAM,IAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAE,GAAE,EAAE,CAAA,OAAO,CAAC,IAAI,CAAC,EAAE,SAAS,EAAC,OAAO,yBAAI,eAAM,SAAS,EAAC,oBAAoB,2BAAkB,IAAS,EAC1I,MAAC,aAAa,IAAC,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,aAC9C,KAAC,YAAY,IAAC,WAAW,EAAC,mBAAmB,GAAG,EAChD,MAAC,WAAW,eACV,KAAC,YAAY,kCAA+B,EAC5C,MAAC,YAAY,IAAC,OAAO,EAAC,iBAAY,aAChC,KAAC,WAAW,IAAC,QAAQ,EAAE,GAAE,EAAE,CAAA,KAAK,CAAC,aAAa,CAAC,uBAAsB,EACrE,KAAC,WAAW,IAAC,QAAQ,EAAE,GAAE,EAAE,CAAA,KAAK,CAAC,eAAe,CAAC,yBAAwB,IAC5D,EACf,KAAC,gBAAgB,KAAG,EACpB,MAAC,YAAY,IAAC,OAAO,EAAC,UAAU,aAC9B,KAAC,WAAW,IAAC,QAAQ,EAAE,GAAE,EAAE,CAAA,KAAK,CAAC,gBAAgB,CAAC,+BAA8B,EAChF,KAAC,WAAW,IAAC,QAAQ,EAAE,GAAE,EAAE,CAAA,KAAK,CAAC,UAAU,CAAC,yBAAwB,IACvD,IACH,IACA,IACf,CACJ,CAAA;AACH,CAAC","sourcesContent":["import * as React from 'react'\nimport { CommandDialog, CommandGroup, CommandInput, CommandItem, CommandList, CommandEmpty, CommandSeparator } from '../ui/command'\nimport { Button } from '../ui/button'\n\n/** Ejemplo mínimo de uso del Command palette integrado */\nexport function CommandPaletteExample(){\n  const [open,setOpen]=React.useState(false)\n  React.useEffect(()=>{ const down=(e:KeyboardEvent)=>{ if(e.key==='k' && (e.metaKey || e.ctrlKey)){ e.preventDefault(); setOpen(o=>!o) } }; window.addEventListener('keydown',down); return ()=>window.removeEventListener('keydown',down) },[])\n  return (\n    <>\n      <Button variant='outline' onClick={()=>setOpen(true)} className='gap-2'>⌘K <span className='text-xs opacity-70'>(o Ctrl+K)</span></Button>\n      <CommandDialog open={open} onOpenChange={setOpen}>\n        <CommandInput placeholder='Buscar comando...' />\n        <CommandList>\n          <CommandEmpty>Sin resultados.</CommandEmpty>\n          <CommandGroup heading='Navegación'>\n            <CommandItem onSelect={()=>alert('Ir a inicio')}>Inicio</CommandItem>\n            <CommandItem onSelect={()=>alert('Ir a reportes')}>Reportes</CommandItem>\n          </CommandGroup>\n          <CommandSeparator />\n          <CommandGroup heading='Acciones'>\n            <CommandItem onSelect={()=>alert('Crear registro')}>Crear registro</CommandItem>\n            <CommandItem onSelect={()=>alert('Exportar')}>Exportar</CommandItem>\n          </CommandGroup>\n        </CommandList>\n      </CommandDialog>\n    </>\n  )\n}\n"]}