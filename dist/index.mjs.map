{"version":3,"file":"index.mjs","sources":["../src/internal/lib/utils.ts","../src/ui/badge.tsx","../../../node_modules/.pnpm/@radix-ui+react-compose-refs@1.1.1_@types+react@19.1.6_react@19.1.0/node_modules/@radix-ui/react-compose-refs/dist/index.mjs","../../../node_modules/.pnpm/@radix-ui+react-slot@1.1.1_@types+react@19.1.6_react@19.1.0/node_modules/@radix-ui/react-slot/dist/index.mjs","../src/ui/button.tsx","../src/ui/table.tsx","../src/ui/input.tsx","../src/ui/dialog.tsx","../src/ui/popover.tsx","../src/ui/separator.tsx","../src/ui/dropdown-menu.tsx","../src/ui/select.tsx","../src/ui/command.tsx","../src/formatters/helpers.ts","../src/formatters/types/default-formatter.tsx","../src/formatters/types/badge-formatter.tsx","../src/formatters/types/date-formatter.tsx","../src/formatters/types/currency-formatter.tsx","../src/formatters/types/percentage-formatter.tsx","../src/formatters/types/icon-formatter.tsx","../src/formatters/types/icon-text-formatter.tsx","../src/formatters/types/custom-formatter.tsx","../src/formatters/types/html-formatter.tsx","../src/formatters/types/link-formatter.tsx","../src/formatters/types/image-formatter.tsx","../src/formatters/registry.ts","../src/data-table/data-table-view-options.tsx","../src/data-table/data-table-faceted-filter.tsx","../src/data-table/data-table-toolbar.tsx","../src/data-table/data-table-pagination.tsx","../src/data-table/data-table.tsx","../src/data-table/actions-menu.tsx","../src/data-table/actions-column.tsx","../src/examples/command-palette-example.tsx","../src/charts/palette.ts","../src/ui/chart.tsx","../src/charts/line-charts.tsx","../src/charts/advanced-charts.tsx","../src/charts/gauge-chart.tsx"],"sourcesContent":["import { clsx, ClassValue } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import * as React from 'react'\nimport { cva, VariantProps } from 'class-variance-authority'\nimport { cn } from '../internal/lib/utils'\n\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default: 'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary: 'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive: 'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground'\n      }\n    },\n    defaultVariants: { variant: 'default' }\n  }\n)\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof badgeVariants> {}\n\nexport function Badge({ className, variant, ...props }: BadgeProps) {\n  return <div className={cn(badgeVariants({ variant }), className)} {...props} />\n}\n\nexport { badgeVariants }\n","// packages/react/compose-refs/src/composeRefs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/slot/src/Slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nvar Slot = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n  if (slottable) {\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement) ? newElement.props.children : null;\n      } else {\n        return child;\n      }\n    });\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n  }\n  return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n});\nSlot.displayName = \"Slot\";\nvar SlotClone = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      // @ts-ignore\n      ref: forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef\n    });\n  }\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\nSlotClone.displayName = \"SlotClone\";\nvar Slottable = ({ children }) => {\n  return /* @__PURE__ */ jsx(Fragment, { children });\n};\nfunction isSlottable(child) {\n  return React.isValidElement(child) && child.type === Slottable;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Slot;\nexport {\n  Root,\n  Slot,\n  Slottable\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, VariantProps } from 'class-variance-authority'\nimport { cn } from '../internal/lib/utils'\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n  { variants:{ variant:{ default:'bg-primary text-primary-foreground hover:bg-primary/90', destructive:'bg-destructive text-destructive-foreground hover:bg-destructive/90', outline:'border border-input bg-background hover:bg-accent hover:text-accent-foreground', secondary:'bg-secondary text-secondary-foreground hover:bg-secondary/80', ghost:'hover:bg-accent hover:text-accent-foreground', link:'text-primary underline-offset-4 hover:underline' }, size:{ default:'h-10 px-4 py-2', sm:'h-9 rounded-md px-3', lg:'h-11 rounded-md px-8', icon:'h-10 w-10' } }, defaultVariants:{ variant:'default', size:'default' } }\n)\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement>, VariantProps<typeof buttonVariants> { asChild?: boolean }\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(({ className, variant, size, asChild=false, ...props }, ref) => { const Comp = asChild ? Slot : 'button'; return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} /> })\nButton.displayName='Button'\nexport { buttonVariants }\n","import * as React from 'react'\nimport { cn } from '../internal/lib/utils'\n\nexport const Table = React.forwardRef<\n\tHTMLTableElement,\n\tReact.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => {\n\treturn (\n\t\t<div className='relative w-full overflow-auto'>\n\t\t\t<table\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn('w-full caption-bottom text-sm', className)}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t</div>\n\t)\n})\nTable.displayName = 'Table'\n\nexport const TableHeader = React.forwardRef<\n\tHTMLTableSectionElement,\n\tReact.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n\t<thead\n\t\tref={ref}\n\t\tclassName={cn('[&_tr]:border-b', className)}\n\t\t{...props}\n\t/>\n))\nTableHeader.displayName = 'TableHeader'\n\nexport const TableBody = React.forwardRef<\n\tHTMLTableSectionElement,\n\tReact.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n\t<tbody\n\t\tref={ref}\n\t\tclassName={cn('[&_tr:last-child]:border-0', className)}\n\t\t{...props}\n\t/>\n))\nTableBody.displayName = 'TableBody'\n\nexport const TableFooter = React.forwardRef<\n\tHTMLTableSectionElement,\n\tReact.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n\t<tfoot\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'border-t bg-muted/50 font-medium [&>tr]:last:border-b-0',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nTableFooter.displayName = 'TableFooter'\n\nexport const TableRow = React.forwardRef<\n\tHTMLTableRowElement,\n\tReact.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n\t<tr\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nTableRow.displayName = 'TableRow'\n\nexport const TableHead = React.forwardRef<\n\tHTMLTableCellElement,\n\tReact.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n\t<th\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nTableHead.displayName = 'TableHead'\n\nexport const TableCell = React.forwardRef<\n\tHTMLTableCellElement,\n\tReact.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n\t<td\n\t\tref={ref}\n\t\tclassName={cn('p-4 align-middle [&:has([role=checkbox])]:pr-0', className)}\n\t\t{...props}\n\t/>\n))\nTableCell.displayName = 'TableCell'\n\nexport const TableCaption = React.forwardRef<\n\tHTMLTableCaptionElement,\n\tReact.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n\t<caption\n\t\tref={ref}\n\t\tclassName={cn('mt-4 text-sm text-muted-foreground', className)}\n\t\t{...props}\n\t/>\n))\nTableCaption.displayName = 'TableCaption'\n","import * as React from 'react'\nimport { cn } from '../internal/lib/utils'\n\nexport const Input = React.forwardRef<\n\tHTMLInputElement,\n\tReact.ComponentProps<'input'>\n>(({ className, type, ...props }, ref) => {\n\treturn (\n\t\t<input\n\t\t\ttype={type}\n\t\t\tclassName={cn(\n\t\t\t\t'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\tref={ref}\n\t\t\t{...props}\n\t\t/>\n\t)\n})\nInput.displayName = 'Input'\n","import * as React from 'react'\nimport * as DialogPrimitive from '@radix-ui/react-dialog'\nimport { X } from 'lucide-react'\nimport { cn } from '../internal/lib/utils'\n\nexport const Dialog = DialogPrimitive.Root\nexport const DialogTrigger = DialogPrimitive.Trigger\nexport const DialogPortal = DialogPrimitive.Portal\nexport const DialogClose = DialogPrimitive.Close\n\nexport const DialogOverlay = React.forwardRef<\n\tReact.ElementRef<typeof DialogPrimitive.Overlay>,\n\tReact.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n\t<DialogPrimitive.Overlay\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nexport const DialogContent = React.forwardRef<\n\tReact.ElementRef<typeof DialogPrimitive.Content>,\n\tReact.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n\t<DialogPortal>\n\t\t<DialogOverlay />\n\t\t<DialogPrimitive.Content\n\t\t\tref={ref}\n\t\t\tclassName={cn(\n\t\t\t\t'fixed left-1/2 top-1/2 z-50 grid w-full max-w-lg -translate-x-1/2 -translate-y-1/2 gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out sm:rounded-lg',\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t\t<DialogPrimitive.Close className='absolute right-4 top-4 rounded-sm opacity-70 transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2'>\n\t\t\t\t<X className='h-4 w-4' />\n\t\t\t\t<span className='sr-only'>Close</span>\n\t\t\t</DialogPrimitive.Close>\n\t\t</DialogPrimitive.Content>\n\t</DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nexport const DialogHeader = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n\t<div\n\t\tclassName={cn('flex flex-col space-y-1.5 text-center sm:text-left', className)}\n\t\t{...props}\n\t/>\n)\n\nexport const DialogFooter = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n\t<div\n\t\tclassName={cn(\n\t\t\t'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n)\n\nexport const DialogTitle = React.forwardRef<\n\tReact.ElementRef<typeof DialogPrimitive.Title>,\n\tReact.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n\t<DialogPrimitive.Title\n\t\tref={ref}\n\t\tclassName={cn('text-lg font-semibold leading-none tracking-tight', className)}\n\t\t{...props}\n\t/>\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nexport const DialogDescription = React.forwardRef<\n\tReact.ElementRef<typeof DialogPrimitive.Description>,\n\tReact.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n\t<DialogPrimitive.Description\n\t\tref={ref}\n\t\tclassName={cn('text-sm text-muted-foreground', className)}\n\t\t{...props}\n\t/>\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName","import * as React from 'react'\nimport * as PopoverPrimitive from '@radix-ui/react-popover'\nimport { cn } from '../internal/lib/utils'\n\nexport const Popover = PopoverPrimitive.Root\nexport const PopoverTrigger = PopoverPrimitive.Trigger\n\nexport const PopoverContent = React.forwardRef<\n\tReact.ElementRef<typeof PopoverPrimitive.Content>,\n\tReact.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = 'center', sideOffset = 4, ...props }, ref) => (\n\t<PopoverPrimitive.Portal>\n\t\t<PopoverPrimitive.Content\n\t\t\tref={ref}\n\t\t\talign={align}\n\t\t\tsideOffset={sideOffset}\n\t\t\tclassName={cn(\n\t\t\t\t'z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out',\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t</PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName","import * as React from 'react'\nimport * as SeparatorPrimitive from '@radix-ui/react-separator'\nimport { cn } from '../internal/lib/utils'\n\nexport const Separator = React.forwardRef<\n\tReact.ElementRef<typeof SeparatorPrimitive.Root>,\n\tReact.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(({ className, orientation = 'horizontal', decorative = true, ...props }, ref) => (\n\t<SeparatorPrimitive.Root\n\t\tref={ref}\n\t\tdecorative={decorative}\n\t\torientation={orientation}\n\t\tclassName={cn(\n\t\t\t'shrink-0 bg-border',\n\t\t\torientation === 'horizontal' ? 'h-px w-full' : 'h-full w-px',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nSeparator.displayName = SeparatorPrimitive.Root.displayName","import * as React from 'react'\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu'\nimport { Check, ChevronRight, Circle } from 'lucide-react'\nimport { cn } from '../internal/lib/utils'\n\nexport const DropdownMenu = DropdownMenuPrimitive.Root\nexport const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\nexport const DropdownMenuGroup = DropdownMenuPrimitive.Group\nexport const DropdownMenuPortal = DropdownMenuPrimitive.Portal\nexport const DropdownMenuSub = DropdownMenuPrimitive.Sub\nexport const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nexport const DropdownMenuSubTrigger = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & { inset?: boolean }\n>(({ className, inset, children, ...props }, ref) => (\n\t<DropdownMenuPrimitive.SubTrigger\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent',\n\t\t\tinset && 'pl-8',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t{children}\n\t\t<ChevronRight className='ml-auto h-4 w-4' />\n\t</DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName\n\nexport const DropdownMenuSubContent = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n\t<DropdownMenuPrimitive.SubContent\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nDropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName\n\nexport const DropdownMenuContent = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.Content>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n\t<DropdownMenuPrimitive.Portal>\n\t\t<DropdownMenuPrimitive.Content\n\t\t\tref={ref}\n\t\t\tsideOffset={sideOffset}\n\t\t\tclassName={cn(\n\t\t\t\t'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md',\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t</DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nexport const DropdownMenuItem = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.Item>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & { inset?: boolean }\n>(({ className, inset, ...props }, ref) => (\n\t<DropdownMenuPrimitive.Item\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:opacity-50',\n\t\t\tinset && 'pl-8',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nexport const DropdownMenuCheckboxItem = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n\t<DropdownMenuPrimitive.CheckboxItem\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:opacity-50',\n\t\t\tclassName\n\t\t)}\n\t\tchecked={checked}\n\t\t{...props}\n\t>\n\t\t<span className='absolute left-2 flex h-3.5 w-3.5 items-center justify-center'>\n\t\t\t<DropdownMenuPrimitive.ItemIndicator>\n\t\t\t\t<Check className='h-4 w-4' />\n\t\t\t</DropdownMenuPrimitive.ItemIndicator>\n\t\t</span>\n\t\t{children}\n\t</DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName\n\nexport const DropdownMenuRadioItem = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n\t<DropdownMenuPrimitive.RadioItem\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<span className='absolute left-2 flex h-3.5 w-3.5 items-center justify-center'>\n\t\t\t<DropdownMenuPrimitive.ItemIndicator>\n\t\t\t\t<Circle className='h-2 w-2 fill-current' />\n\t\t\t</DropdownMenuPrimitive.ItemIndicator>\n\t\t</span>\n\t\t{children}\n\t</DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nexport const DropdownMenuLabel = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.Label>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & { inset?: boolean }\n>(({ className, inset, ...props }, ref) => (\n\t<DropdownMenuPrimitive.Label\n\t\tref={ref}\n\t\tclassName={cn('px-2 py-1.5 text-sm font-semibold', inset && 'pl-8', className)}\n\t\t{...props}\n\t/>\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nexport const DropdownMenuSeparator = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n\t<DropdownMenuPrimitive.Separator\n\t\tref={ref}\n\t\tclassName={cn('-mx-1 my-1 h-px bg-muted', className)}\n\t\t{...props}\n\t/>\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nexport const DropdownMenuShortcut = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLSpanElement>) => (\n\t<span\n\t\tclassName={cn('ml-auto text-xs tracking-widest opacity-60', className)}\n\t\t{...props}\n\t/>\n)\nDropdownMenuShortcut.displayName = 'DropdownMenuShortcut'","import * as React from 'react'\nimport * as SelectPrimitive from '@radix-ui/react-select'\nimport { Check, ChevronDown, ChevronUp } from 'lucide-react'\nimport { cn } from '../internal/lib/utils'\n\nexport const Select = SelectPrimitive.Root\nexport const SelectGroup = SelectPrimitive.Group\nexport const SelectValue = SelectPrimitive.Value\n\nexport const SelectTrigger = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.Trigger>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n\t<SelectPrimitive.Trigger\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t{children}\n\t\t<SelectPrimitive.Icon asChild>\n\t\t\t<ChevronDown className='h-4 w-4 opacity-50' />\n\t\t</SelectPrimitive.Icon>\n\t</SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n\t<SelectPrimitive.ScrollUpButton\n\t\tref={ref}\n\t\tclassName={cn('flex cursor-default items-center justify-center py-1', className)}\n\t\t{...props}\n\t>\n\t\t<ChevronUp className='h-4 w-4' />\n\t</SelectPrimitive.ScrollUpButton>\n))\n\nconst SelectScrollDownButton = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n\t<SelectPrimitive.ScrollDownButton\n\t\tref={ref}\n\t\tclassName={cn('flex cursor-default items-center justify-center py-1', className)}\n\t\t{...props}\n\t>\n\t\t<ChevronDown className='h-4 w-4' />\n\t</SelectPrimitive.ScrollDownButton>\n))\n\nexport const SelectContent = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.Content>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => (\n\t<SelectPrimitive.Portal>\n\t\t<SelectPrimitive.Content\n\t\t\tref={ref}\n\t\t\tclassName={cn(\n\t\t\t\t'relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md',\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\tposition={position}\n\t\t\t{...props}\n\t\t>\n\t\t\t<SelectScrollUpButton />\n\t\t\t<SelectPrimitive.Viewport\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'p-1',\n\t\t\t\t\tposition === 'popper' &&\n\t\t\t\t\t\t'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]'\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</SelectPrimitive.Viewport>\n\t\t\t<SelectScrollDownButton />\n\t\t</SelectPrimitive.Content>\n\t</SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nexport const SelectLabel = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.Label>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n\t<SelectPrimitive.Label\n\t\tref={ref}\n\t\tclassName={cn('py-1.5 pl-8 pr-2 text-sm font-semibold', className)}\n\t\t{...props}\n\t/>\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nexport const SelectItem = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.Item>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n\t<SelectPrimitive.Item\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<span className='absolute left-2 flex h-3.5 w-3.5 items-center justify-center'>\n\t\t\t<SelectPrimitive.ItemIndicator>\n\t\t\t\t<Check className='h-4 w-4' />\n\t\t\t</SelectPrimitive.ItemIndicator>\n\t\t</span>\n\t\t<SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n\t</SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nexport const SelectSeparator = React.forwardRef<\n\tReact.ElementRef<typeof SelectPrimitive.Separator>,\n\tReact.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n\t<SelectPrimitive.Separator\n\t\tref={ref}\n\t\tclassName={cn('-mx-1 my-1 h-px bg-muted', className)}\n\t\t{...props}\n\t/>\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName","import * as React from 'react'\nimport { DialogProps } from '@radix-ui/react-dialog'\nimport { Command as CommandPrimitive } from 'cmdk'\nimport { Search } from 'lucide-react'\nimport { cn } from '../internal/lib/utils'\nimport { Dialog, DialogContent } from './dialog'\nexport const Command = React.forwardRef<React.ElementRef<typeof CommandPrimitive>, React.ComponentPropsWithoutRef<typeof CommandPrimitive>>(({ className, ...props }, ref)=>(<CommandPrimitive ref={ref} className={cn('flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground', className)} {...props} />))\nCommand.displayName = CommandPrimitive.displayName\nexport const CommandDialog = ({ children, ...props }: DialogProps) => (<Dialog {...props}><DialogContent className='overflow-hidden p-0 shadow-lg'><Command className='[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground'>{children}</Command></DialogContent></Dialog>)\nexport const CommandInput = React.forwardRef<React.ElementRef<typeof CommandPrimitive.Input>, React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>>(({ className, ...props }, ref)=>(<div className='flex items-center border-b px-3' cmdk-input-wrapper=''><Search className='mr-2 h-4 w-4 shrink-0 opacity-50' /><CommandPrimitive.Input ref={ref} className={cn('flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:opacity-50', className)} {...props} /></div>))\nCommandInput.displayName = CommandPrimitive.Input.displayName\nexport const CommandList = React.forwardRef<React.ElementRef<typeof CommandPrimitive.List>, React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>>(({ className, ...props }, ref)=>(<CommandPrimitive.List ref={ref} className={cn('max-h-[300px] overflow-y-auto overflow-x-hidden', className)} {...props} />))\nCommandList.displayName = CommandPrimitive.List.displayName\nexport const CommandEmpty = React.forwardRef<React.ElementRef<typeof CommandPrimitive.Empty>, React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>>((props, ref)=>(<CommandPrimitive.Empty ref={ref} className='py-6 text-center text-sm' {...props} />))\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\nexport const CommandGroup = React.forwardRef<React.ElementRef<typeof CommandPrimitive.Group>, React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>>(({ className, ...props }, ref)=>(<CommandPrimitive.Group ref={ref} className={cn('overflow-hidden p-1 text-foreground', className)} {...props} />))\nCommandGroup.displayName = CommandPrimitive.Group.displayName\nexport const CommandSeparator = React.forwardRef<React.ElementRef<typeof CommandPrimitive.Separator>, React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>>(({ className, ...props }, ref)=>(<CommandPrimitive.Separator ref={ref} className={cn('-mx-1 h-px bg-border', className)} {...props} />))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\nexport const CommandItem = React.forwardRef<React.ElementRef<typeof CommandPrimitive.Item>, React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>>(({ className, ...props }, ref)=>(<CommandPrimitive.Item ref={ref} className={cn('relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[selected=true]:bg-accent', className)} {...props} />))\nCommandItem.displayName = CommandPrimitive.Item.displayName\nexport const CommandShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => (<span className={cn('ml-auto text-xs tracking-widest text-muted-foreground', className)} {...props} />)\nCommandShortcut.displayName = 'CommandShortcut'","import React from 'react'\nimport { FormatterContext, FormatterResult, ColumnFormatter, ConditionalFormat } from '../internal/types/formatters'\n\nexport function applyTemplate(template: string, value: any, record?: any): string {\n  if (!template) return String(value ?? '')\n  return template\n    .replace(/\\{value\\}/g, String(value ?? ''))\n    .replace(/\\{record\\.(\\w+)\\}/g, (_, prop) => String(record?.[prop] ?? ''))\n}\n\nexport function createCustomFormatter(\n  render: (context: FormatterContext) => React.ReactNode\n) {\n  return (context: FormatterContext) => ({ content: render(context) })\n}\n\nexport function applyConditionalFormatting(\n  context: FormatterContext,\n  baseResult: FormatterResult,\n  formatCell: (ctx: FormatterContext) => FormatterResult\n): FormatterResult {\n  const { field, value, record } = context\n  const conditionalFormats: ConditionalFormat[] = field.formatter?.options?.conditionalFormatting || field.conditionalFormatting || []\n  for (const format of conditionalFormats) {\n    let met = false\n    if (typeof format.condition === 'function') met = format.condition(value, record)\n    else if (typeof format.condition === 'string') {\n      try { met = evaluateCondition(format.condition, value, record) } catch { continue }\n    }\n    if (met) {\n      if (format.formatter) {\n        const newCtx: FormatterContext = { ...context, field: { ...context.field, formatter: format.formatter as ColumnFormatter } }\n        return formatCell(newCtx)\n      }\n      return { ...baseResult, className: combineClassNames(baseResult.className, format.className), style: { ...baseResult.style, ...format.style } }\n    }\n  }\n  return baseResult\n}\n\nfunction evaluateCondition(condition: string, value: any, record: any): boolean {\n  const safe = condition\n    .replace(/\\bvalue\\b/g, JSON.stringify(value))\n    .replace(/\\brecord\\.(\\w+)\\b/g, (_, p) => JSON.stringify(record?.[p]))\n  const allowed = /^[\\d\\s\\+\\-\\*\\/\\(\\)\\>\\<\\=\\!\\&\\|\\.\\\"\\'\\w]+$/\n  if (!allowed.test(safe)) throw new Error('Unsafe condition')\n  // eslint-disable-next-line no-new-func\n  return new Function('return ' + safe)()\n}\n\nfunction combineClassNames(...classes: (string | undefined)[]) {\n  return classes.filter(Boolean).join(' ')\n}","import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\nimport { applyTemplate } from '../helpers'\n\nexport const DefaultFormatter: FormatterFunction = ({ value, field, record }) => {\n  const options = field.formatter?.options\n  let displayValue = value\n  if (options?.template) displayValue = applyTemplate(options.template, value, record)\n  else displayValue = value?.toString() || ''\n  return {\n    content: <span className={options?.className}>{displayValue}</span>,\n    className: options?.className,\n    style: options?.style\n  }\n}\n","import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\nimport { Badge } from '../../ui/badge'\nimport { applyTemplate } from '../helpers'\nimport { CircleIcon, CircleDashedIcon, Clock, CheckCircle, XCircle, AlertCircle, Star, Heart, Zap } from 'lucide-react'\n\nconst BADGE_ICONS = {\n  'circle': CircleIcon,\n  'circle-dashed': CircleDashedIcon,\n  'clock': Clock,\n  'check-circle': CheckCircle,\n  'x-circle': XCircle,\n  'alert-circle': AlertCircle,\n  'star': Star,\n  'heart': Heart,\n  'zap': Zap\n}\n\nexport const BadgeFormatter: FormatterFunction = ({ value, field, record }) => {\n  const options = field.formatter?.options\n  const valueConfig = options?.valueMap?.[value]\n  const variant = valueConfig?.variant || options?.variant || 'default'\n  let displayText = valueConfig?.label || value\n  if (options?.template) displayText = applyTemplate(options.template, value, record)\n  const iconKey = valueConfig?.icon || options?.icon\n  const IconComponent = iconKey ? BADGE_ICONS[iconKey as keyof typeof BADGE_ICONS] : null\n  const combinedClassName = [options?.badgeClassName, valueConfig?.className, options?.className].filter(Boolean).join(' ')\n  const combinedStyle = { ...options?.style, ...valueConfig?.style }\n  return {\n    content: (\n      <Badge variant={variant as any} className={combinedClassName} style={combinedStyle}>\n        {IconComponent && <IconComponent className={`mr-1 h-3 w-3 ${options?.iconClassName || ''}`} />}\n        {displayText}\n      </Badge>\n    )\n  }\n}\n","import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\n\nexport const DateFormatter: FormatterFunction = ({ value, field }) => {\n  const options = field.formatter?.options\n  if (!value) return { content: <span className=\"text-muted-foreground\">-</span> }\n  const date = new Date(value)\n  if (isNaN(date.getTime())) return { content: <span className={options?.className}>{value}</span> }\n  let formattedDate: string\n  const locale = options?.locale || 'es-ES'\n  switch (options?.format) {\n    case 'short': formattedDate = date.toLocaleDateString(locale); break\n    case 'medium': formattedDate = date.toLocaleDateString(locale,{year:'numeric',month:'short',day:'numeric'}); break\n    case 'long': formattedDate = date.toLocaleDateString(locale,{year:'numeric',month:'long',day:'numeric',weekday:'long'}); break\n    case 'relative': formattedDate = formatRelativeDate(date); break\n    case 'custom': formattedDate = formatCustomDate(date, options?.customFormat || 'DD/MM/YYYY'); break\n    default: formattedDate = date.toISOString().split('T')[0]\n  }\n  return { content: <span className={options?.className} title={date.toLocaleString(locale)}>{formattedDate}</span>, style: options?.style }\n}\nfunction formatRelativeDate(date: Date){const now=new Date();const diffInDays=Math.floor((now.getTime()-date.getTime())/(1000*60*60*24));if(diffInDays===0)return 'Hoy';if(diffInDays===1)return 'Ayer';if(diffInDays===-1)return 'Mañana';if(diffInDays>1&&diffInDays<=7)return `Hace ${diffInDays} días`;if(diffInDays< -1&&diffInDays>= -7)return `En ${Math.abs(diffInDays)} días`;return date.toLocaleDateString('es-ES')}\nfunction formatCustomDate(date:Date,pattern:string){const day=date.getDate().toString().padStart(2,'0');const month=(date.getMonth()+1).toString().padStart(2,'0');const year=date.getFullYear().toString();const shortYear=year.slice(-2);const hours=date.getHours().toString().padStart(2,'0');const minutes=date.getMinutes().toString().padStart(2,'0');const seconds=date.getSeconds().toString().padStart(2,'0');const monthNames=['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'];const monthNamesShort=['Ene','Feb','Mar','Abr','May','Jun','Jul','Ago','Sep','Oct','Nov','Dic'];return pattern.replace(/YYYY/g,year).replace(/YY/g,shortYear).replace(/MMMM/g,monthNames[date.getMonth()]).replace(/MMM/g,monthNamesShort[date.getMonth()]).replace(/MM/g,month).replace(/M/g,(date.getMonth()+1).toString()).replace(/DD/g,day).replace(/D/g,date.getDate().toString()).replace(/HH/g,hours).replace(/H/g,date.getHours().toString()).replace(/mm/g,minutes).replace(/m/g,date.getMinutes().toString()).replace(/ss/g,seconds).replace(/s/g,date.getSeconds().toString())}\n","import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\n\nexport const CurrencyFormatter: FormatterFunction = ({ value, field }) => {\n  const options = field.formatter?.options\n  if (value === null || value === undefined || isNaN(Number(value))) return { content: <span className=\"text-muted-foreground\">-</span> }\n  const currency = options?.currency || 'EUR'\n  const decimals = options?.decimals ?? 2\n  const locale = options?.locale || 'es-ES'\n  try {\n    const formatter = new Intl.NumberFormat(locale,{ style:'currency', currency, minimumFractionDigits:decimals, maximumFractionDigits:decimals })\n    const formattedValue = formatter.format(Number(value))\n    return { content: <span className={options?.className}>{formattedValue}</span>, style: options?.style }\n  } catch {\n    return { content: <span className={options?.className}>{Number(value).toFixed(decimals)} {currency}</span>, style: options?.style }\n  }\n}\n","import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\n\nexport const PercentageFormatter: FormatterFunction = ({ value, field }) => {\n  const options = field.formatter?.options\n  if (value === null || value === undefined || isNaN(Number(value))) return { content: <span className=\"text-muted-foreground\">-</span> }\n  const decimals = options?.decimals ?? 1\n  const suffix = options?.suffix || '%'\n  let percentageValue = Number(value)\n  if (percentageValue <=1 && percentageValue >=0) percentageValue *= 100\n  const formattedValue = percentageValue.toFixed(decimals)\n  return { content: <span className={options?.className}>{formattedValue}{suffix}</span>, style: options?.style }\n}\n","import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\nimport { CircleIcon, CircleDashedIcon, Clock, CheckCircle, XCircle, AlertCircle, Star, Heart, Zap, User, Mail, Phone, Calendar, Settings, Home, Building, MapPin, Camera, FileText, Download, Upload, Edit, Trash2, Eye, Search, Filter, Plus, Minus } from 'lucide-react'\n\nconst ICON_REGISTRY = { 'circle': CircleIcon,'circle-dashed': CircleDashedIcon,'clock': Clock,'check-circle': CheckCircle,'x-circle': XCircle,'alert-circle': AlertCircle,'star': Star,'heart': Heart,'zap': Zap,'user': User,'mail': Mail,'phone': Phone,'calendar': Calendar,'settings': Settings,'home': Home,'building': Building,'map-pin': MapPin,'camera': Camera,'file-text': FileText,'download': Download,'upload': Upload,'edit': Edit,'trash': Trash2,'eye': Eye,'search': Search,'filter': Filter,'plus': Plus,'minus': Minus }\n\nexport const IconFormatter: FormatterFunction = ({ value, field }) => {\n  const options = field.formatter?.options\n  const valueConfig = options?.valueMap?.[value]\n  const iconKey = valueConfig?.icon || options?.icon || value\n  const IconComponent = ICON_REGISTRY[iconKey as keyof typeof ICON_REGISTRY]\n  if (!IconComponent) return { content: <span className='text-muted-foreground'>-</span> }\n  const combinedClassName = ['h-4 w-4', options?.iconClassName, valueConfig?.className, options?.className].filter(Boolean).join(' ')\n  return { content: <IconComponent className={combinedClassName} style={{ ...options?.style, ...valueConfig?.style }} /> }\n}\n","import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\nimport { applyTemplate } from '../helpers'\nimport { CircleIcon, CircleDashedIcon, Clock, CheckCircle, XCircle, AlertCircle, Star, Heart, Zap, User, Mail, Phone, Calendar, Settings, Home, Building, MapPin, Camera, FileText, Download, Upload, Edit, Trash2, Eye, Search, Filter, Plus, Minus } from 'lucide-react'\n\nconst ICON_REGISTRY = { 'circle': CircleIcon,'circle-dashed': CircleDashedIcon,'clock': Clock,'check-circle': CheckCircle,'x-circle': XCircle,'alert-circle': AlertCircle,'star': Star,'heart': Heart,'zap': Zap,'user': User,'mail': Mail,'phone': Phone,'calendar': Calendar,'settings': Settings,'home': Home,'building': Building,'map-pin': MapPin,'camera': Camera,'file-text': FileText,'download': Download,'upload': Upload,'edit': Edit,'trash': Trash2,'eye': Eye,'search': Search,'filter': Filter,'plus': Plus,'minus': Minus }\n\nexport const IconTextFormatter: FormatterFunction = ({ value, field, record }) => {\n  const options = field.formatter?.options\n  const valueConfig = options?.valueMap?.[value]\n  let displayText = valueConfig?.label || value\n  if (options?.template) displayText = applyTemplate(options.template, value, record)\n  const iconKey = valueConfig?.icon || options?.icon\n  const IconComponent = iconKey ? ICON_REGISTRY[iconKey as keyof typeof ICON_REGISTRY] : null\n  const iconPosition = options?.iconPosition || 'left'\n  const textClassName = [valueConfig?.className, options?.className].filter(Boolean).join(' ')\n  const iconClassName = ['h-4 w-4', options?.iconClassName].filter(Boolean).join(' ')\n  return { content: (<div className='flex items-center gap-2'>{IconComponent && iconPosition === 'left' && <IconComponent className={iconClassName} />}<span className={textClassName}>{displayText}</span>{IconComponent && iconPosition === 'right' && <IconComponent className={iconClassName} />}</div>), style: { ...options?.style, ...valueConfig?.style } }\n}\n","import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\nimport { applyTemplate } from '../helpers'\n\nexport const CustomFormatter: FormatterFunction = ({ value, field, record }) => {\n  const options = field.formatter?.options\n  if (options?.template) {\n    const processedValue = applyTemplate(options.template, value, record)\n    return { content: <span className={options?.className} style={options?.style}>{processedValue}</span> }\n  }\n  return { content: <span className={options?.className} style={options?.style}>{String(value || '')}</span> }\n}\n","import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\nimport { applyTemplate } from '../helpers'\n\nexport const HtmlFormatter: FormatterFunction = ({ value, field, record }) => {\n  const options = field.formatter?.options\n  let htmlContent = String(value || '')\n  if (options?.template) htmlContent = applyTemplate(options.template, value, record)\n  return { content: <div className={options?.className} style={options?.style} dangerouslySetInnerHTML={{ __html: htmlContent }} /> }\n}\n","import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\nimport { applyTemplate } from '../helpers'\n\nexport const LinkFormatter: FormatterFunction = ({ value, field, record }) => {\n  const options = field.formatter?.options\n  if (!value) return { content: <span className='text-muted-foreground'>-</span> }\n  let href: string\n  if (typeof options?.href === 'function') href = options.href(value, record)\n  else if (options?.href) href = applyTemplate(options.href, value, record)\n  else href = String(value)\n  let displayText = value\n  if (options?.template) displayText = applyTemplate(options.template, value, record)\n  const target = options?.target || '_self'\n  return { content: <a href={href} target={target} rel={target === '_blank' ? 'noopener noreferrer':undefined} className={`hover:underline ${options?.linkClassName || 'text-blue-600'} ${options?.className || ''}`} style={options?.style}>{displayText}</a> }\n}\n","import React from 'react'\nimport { FormatterFunction } from '../../internal/types/formatters'\n\nexport const ImageFormatter: FormatterFunction = ({ value, field }) => {\n  const options = field.formatter?.options\n  if (!value) return { content: <span className='text-muted-foreground'>-</span> }\n  const width = options?.width || 32\n  const height = options?.height || 32\n  const alt = options?.alt || 'Image'\n  const fallbackSrc = options?.fallbackSrc || '/placeholder.svg'\n  return { content: <img src={String(value)} alt={alt} width={width} height={height} className={`rounded ${options?.className || ''}`} style={options?.style} onError={(e)=>{const t=e.target as HTMLImageElement; if (t.src!==fallbackSrc) t.src=fallbackSrc}} /> }\n}\n","import { FormatterFunction, FormatterType, FormatterContext, FormatterResult } from '../internal/types/formatters'\nimport { DefaultFormatter } from './types/default-formatter'\nimport { BadgeFormatter } from './types/badge-formatter'\nimport { DateFormatter } from './types/date-formatter'\nimport { CurrencyFormatter } from './types/currency-formatter'\nimport { PercentageFormatter } from './types/percentage-formatter'\nimport { IconFormatter } from './types/icon-formatter'\nimport { IconTextFormatter } from './types/icon-text-formatter'\nimport { CustomFormatter } from './types/custom-formatter'\nimport { HtmlFormatter } from './types/html-formatter'\nimport { LinkFormatter } from './types/link-formatter'\nimport { ImageFormatter } from './types/image-formatter'\nimport { applyConditionalFormatting, applyTemplate, createCustomFormatter } from './helpers'\n\n/**\n * Registry mutable de formatters.\n * Puedes extenderlo con formatters personalizados usando registerFormatter()\n */\nexport const FORMATTERS: Record<string, FormatterFunction> = {\n  default: DefaultFormatter,\n  badge: BadgeFormatter,\n  date: DateFormatter,\n  currency: CurrencyFormatter,\n  percentage: PercentageFormatter,\n  icon: IconFormatter,\n  'icon-text': IconTextFormatter,\n  custom: CustomFormatter,\n  html: HtmlFormatter,\n  link: LinkFormatter,\n  image: ImageFormatter,\n}\n\n/**\n * Registra un formatter personalizado en el registry global.\n * \n * @example\n * ```typescript\n * import { registerFormatter, type FormatterFunction } from '@teribit/ui-blocks'\n * \n * const myCustomFormatter: FormatterFunction = (context) => ({\n *   content: <span className=\"custom\">{context.value}</span>\n * })\n * \n * registerFormatter('my-custom', myCustomFormatter)\n * \n * // Ahora puedes usarlo en tus columnas:\n * { formatter: { type: 'my-custom' } }\n * ```\n */\nexport function registerFormatter(type: string, formatter: FormatterFunction): void {\n  if (FORMATTERS[type]) {\n    console.warn(`Formatter '${type}' ya existe y será sobrescrito`)\n  }\n  FORMATTERS[type] = formatter\n}\n\n/**\n * Verifica si un formatter está registrado\n */\nexport function hasFormatter(type: string): boolean {\n  return type in FORMATTERS\n}\n\n/**\n * Obtiene un formatter del registry (útil para composición)\n */\nexport function getFormatter(type: string): FormatterFunction | undefined {\n  return FORMATTERS[type]\n}\n\nexport function formatCell(context: FormatterContext): FormatterResult {\n  const { field } = context\n  if (!field.formatter) return DefaultFormatter(context)\n  const formatter = FORMATTERS[field.formatter.type]\n  if (!formatter) {\n    console.warn(`Formatter type '${field.formatter.type}' not found, using default`)\n    return DefaultFormatter(context)\n  }\n  try {\n    const result = formatter(context)\n  return applyConditionalFormatting(context, result, formatCell)\n  } catch (e) {\n    console.error(`Error in formatter '${field.formatter.type}':`, e)\n    return DefaultFormatter(context)\n  }\n}\n\nexport { applyTemplate, createCustomFormatter }\nexport type { FormatterFunction, FormatterContext, FormatterResult, FormatterType } from '../internal/types/formatters'\n","import { Settings } from 'lucide-react'\nimport type { Table } from '@tanstack/react-table'\nimport { Button } from '../ui/button'\nimport { DropdownMenu, DropdownMenuCheckboxItem, DropdownMenuContent, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from '../ui/dropdown-menu'\n\ninterface DataTableViewOptionsProps<TData>{ table: Table<TData> }\nexport function DataTableViewOptions<TData>({ table }: DataTableViewOptionsProps<TData>){\n  // Incluir columnas con accessorKey (accessorFn es undefined en ese caso)\n  const columns = table.getAllColumns().filter(col => col.getCanHide())\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant='outline' size='sm' className='h-8 w-8 p-0'><Settings className='h-4 w-4' /><span className='sr-only'>View options</span></Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align='end' className='w-44'>\n        <DropdownMenuLabel className='text-xs'>Toggle columns</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        {columns.map(column=> (\n          <DropdownMenuCheckboxItem key={column.id} checked={column.getIsVisible()} onCheckedChange={(value)=>column.toggleVisibility(!!value)} className='capitalize'>\n            {column.id}\n          </DropdownMenuCheckboxItem>\n        ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n","import { CheckIcon, ListFilter } from 'lucide-react'\nimport type { Column } from '@tanstack/react-table'\nimport { Badge } from '../ui/badge'\nimport { Button } from '../ui/button'\nimport { cn } from '../internal/lib/utils'\nimport * as React from 'react'\nimport { Popover, PopoverContent, PopoverTrigger } from '../ui/popover'\n\ninterface DataTableFacetedFilterProps<TData, TValue>{ column?: Column<TData, TValue>; title?: string; options:{ label:string; value:string; icon?: React.ComponentType<{className?:string}>; count?: number }[] }\nexport function DataTableFacetedFilter<TData, TValue>({ column, title, options }: DataTableFacetedFilterProps<TData, TValue>){\n  const selectedValues = new Set(column?.getFilterValue() as string[])\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button variant='outline' size='sm' className='h-8 border-dashed'>\n          <ListFilter className='mr-2 h-4 w-4' />{title}\n          {selectedValues?.size>0 && (\n            <Badge variant='secondary' className='ml-2 rounded-sm px-1 font-normal'>{selectedValues.size}</Badge>\n          )}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className='w-56 p-2' align='start'>\n        <div className='flex flex-col gap-1 max-h-60 overflow-auto'>\n          {options.map(option=>{ const isSelected = selectedValues.has(option.value); return (\n            <button key={option.value} onClick={()=>{ if(isSelected) selectedValues.delete(option.value); else selectedValues.add(option.value); const next=Array.from(selectedValues); column?.setFilterValue(next.length? next: undefined) }} className={cn('flex items-center gap-2 rounded px-2 py-1 text-left text-xs hover:bg-accent', isSelected && 'bg-accent')}>\n              <span className={cn('flex h-4 w-4 items-center justify-center rounded-sm border border-primary', isSelected ? 'bg-primary text-primary-foreground':'opacity-50')}><CheckIcon className='h-3 w-3' /></span>\n              {option.icon && <option.icon className='h-3.5 w-3.5 text-muted-foreground' />}\n              <span className='flex-1'>{option.label}</span>\n              {option.count!==undefined && <span className='ml-auto font-mono text-[10px]'>{option.count}</span>}\n            </button>\n          )})}\n          {selectedValues.size>0 && <button onClick={()=>column?.setFilterValue(undefined)} className='mt-1 rounded bg-muted px-2 py-1 text-xs'>Clear filters</button>}\n        </div>\n      </PopoverContent>\n    </Popover>\n  )\n}\n","import { Search } from 'lucide-react'\nimport type { Table, GroupingState } from '@tanstack/react-table'\nimport { Input } from '../ui/input'\nimport { Button } from '../ui/button'\nimport { DataTableViewOptions } from './data-table-view-options'\nimport { DataTableFacetedFilter } from './data-table-faceted-filter'\nimport { cn } from '../internal/lib/utils'\n\ninterface DataTableToolbarProps<TData>{ table: Table<TData>; searchKey?: string; searchPlaceholder?: string; filters?: { columnId: string; title: string; options:{ label:string; value:string; icon?: React.ComponentType<{className?:string}>; count?: number }[] }[]; className?: string; enableGrouping?: boolean; grouping?: GroupingState; setGrouping?: (updater:GroupingState)=>void; groupableColumns?: string[] }\nexport function DataTableToolbar<TData>({ table, searchKey='title', searchPlaceholder='Filter rows...', filters=[], className, enableGrouping=false, grouping=[], setGrouping, groupableColumns }: DataTableToolbarProps<TData>){\n  const isFiltered = table.getState().columnFilters.length>0\n  return (\n    <div className={cn('flex flex-col gap-4 sm:flex-row sm:items-center py-4', className)}>\n      <div className='relative w-full sm:max-w-xs'>\n        <Search className='absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground' />\n        <Input placeholder={searchPlaceholder} value={(table.getColumn(searchKey)?.getFilterValue() as string) ?? ''} onChange={e=>table.getColumn(searchKey)?.setFilterValue(e.target.value)} className='w-full pl-8' />\n      </div>\n      <div className='flex flex-wrap items-center gap-2 ml-auto'>\n        {filters.map(filter=>{ const column = table.getColumn(filter.columnId); if(!column) return null; return <DataTableFacetedFilter key={filter.columnId} column={column} title={filter.title} options={filter.options} /> })}\n        {enableGrouping && groupableColumns && groupableColumns.length>0 && (\n          <div className='flex items-center gap-1'>\n            <div className='flex gap-1'>\n              {groupableColumns.map(id=>{ const col = table.getColumn(id); if(!col) return null; const isActive = grouping.includes(id); return (\n                <Button key={id} variant={isActive? 'default':'outline'} size='sm' className='h-8 px-2 text-xs' onClick={()=>{\n                  if(!setGrouping) return; const next = isActive ? grouping.filter(g=>g!==id) : [...grouping, id]; setGrouping(next); col.toggleGrouping();\n                }}>{col.id}</Button>\n              )})}\n            </div>\n          </div>\n        )}\n        {isFiltered && <Button variant='ghost' onClick={()=>table.resetColumnFilters()} className='h-8 px-2 lg:px-3'>Reset</Button>}\n        <DataTableViewOptions table={table} />\n      </div>\n      {enableGrouping && grouping.length>0 && (\n        <div className='flex flex-wrap gap-2 -mb-2'>\n          {grouping.map(g=> <span key={g} className='inline-flex items-center gap-1 rounded-full bg-muted px-2 py-0.5 text-xs'>{g}<button onClick={()=>{ if(!setGrouping) return; const next = grouping.filter(x=>x!==g); setGrouping(next); const col = table.getColumn(g); if(col){ col.toggleGrouping(); } }} className='text-muted-foreground hover:text-foreground'>×</button></span>)}\n        </div>\n      )}\n    </div>\n  )\n}\n","import { ChevronLeft, ChevronRight, ChevronsLeft, ChevronsRight } from 'lucide-react'\nimport type { Table } from '@tanstack/react-table'\nimport { Button } from '../ui/button'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select'\n\ninterface DataTablePaginationProps<TData>{ table: Table<TData> }\nexport function DataTablePagination<TData>({ table }: DataTablePaginationProps<TData>){\n  const pageSize = table.getState().pagination.pageSize\n  return (\n    <div className='flex items-center justify-between px-2'>\n      <div className='flex items-center gap-2'>\n        <p className='text-sm font-medium'>Rows</p>\n        <Select value={String(pageSize)} onValueChange={val=>table.setPageSize(Number(val))}>\n          <SelectTrigger className='h-8 w-[80px]'><SelectValue /></SelectTrigger>\n          <SelectContent>\n            {[5,10,20,30,40,50].map(ps=> <SelectItem key={ps} value={String(ps)}>{ps}</SelectItem>)}\n          </SelectContent>\n        </Select>\n      </div>\n      <div className='flex-1 text-sm text-muted-foreground hidden lg:block pl-3'>\n        {table.getFilteredSelectedRowModel().rows.length} of {table.getFilteredRowModel().rows.length} selected.\n      </div>\n      <div className='flex items-center space-x-6 lg:space-x-8'>\n        <div className='flex w-[100px] items-center justify-center text-sm font-medium'>Page {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}</div>\n        <div className='flex items-center space-x-2'>\n          <Button variant='outline' className='hidden h-8 w-8 p-0 lg:flex' onClick={()=>table.setPageIndex(0)} disabled={!table.getCanPreviousPage()}><span className='sr-only'>First</span><ChevronsLeft className='h-4 w-4' /></Button>\n            <Button variant='outline' className='h-8 w-8 p-0' onClick={()=>table.previousPage()} disabled={!table.getCanPreviousPage()}><span className='sr-only'>Prev</span><ChevronLeft className='h-4 w-4' /></Button>\n            <Button variant='outline' className='h-8 w-8 p-0' onClick={()=>table.nextPage()} disabled={!table.getCanNextPage()}><span className='sr-only'>Next</span><ChevronRight className='h-4 w-4' /></Button>\n            <Button variant='outline' className='hidden h-8 w-8 p-0 lg:flex' onClick={()=>table.setPageIndex(table.getPageCount()-1)} disabled={!table.getCanNextPage()}><span className='sr-only'>Last</span><ChevronsRight className='h-4 w-4' /></Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","// Limpio: versión con export explícito de DataTableProps y DnD robusto\nimport * as React from 'react'\nimport {\n  flexRender,\n  getCoreRowModel,\n  getFacetedRowModel,\n  getFacetedUniqueValues,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  getGroupedRowModel,\n  getExpandedRowModel,\n  useReactTable,\n  type ColumnDef,\n  type ColumnFiltersState,\n  type SortingState,\n  type VisibilityState,\n  type GroupingState,\n  type Row,\n  type Cell,\n} from '@tanstack/react-table'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../ui/table'\nimport { DataTableToolbar } from './data-table-toolbar'\nimport { DataTablePagination } from './data-table-pagination'\nimport { GripVertical } from 'lucide-react'\n// Valor por defecto para la transición FLIP si no se pasa prop\nconst DEFAULT_COLUMN_FLIP_TRANSITION = 'transform 220ms cubic-bezier(.22,.61,.36,1)'\n\nexport interface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[]\n  data: TData[]\n  searchKey?: string\n  searchPlaceholder?: string\n  filters?: { columnId: string; title: string; options: { label: string; value: string; icon?: React.ComponentType<{ className?: string }>; count?: number }[] }[]\n  enableColumnReorder?: boolean\n  enableGrouping?: boolean\n  groupableColumns?: string[]\n  /** Permite personalizar la transición FLIP usada en el preview de reordenamiento (e.g. 'transform 300ms ease'). */\n  reorderTransition?: string\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n  searchKey = 'title',\n  searchPlaceholder,\n  filters,\n  enableColumnReorder = false,\n  enableGrouping = false,\n  groupableColumns,\n  reorderTransition,\n}: DataTableProps<TData, TValue>) {\n  const [rowSelection, setRowSelection] = React.useState({})\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({})\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([])\n  const [sorting, setSorting] = React.useState<SortingState>([])\n  const [columnOrder, setColumnOrder] = React.useState<string[]>([])\n  const [grouping, setGrouping] = React.useState<GroupingState>([])\n  const headerContainerRef = React.useRef<HTMLTableSectionElement | null>(null)\n  const dragSourceIdRef = React.useRef<string | null>(null)\n  const initialLayoutRef = React.useRef<{ baseLeft: number; widths: Record<string, number>; lefts: Record<string, number> } | null>(null)\n  const lastPreviewTargetRef = React.useRef<string | null>(null)\n  const isMountedRef = React.useRef(false)\n  const pendingRafRef = React.useRef<number | null>(null)\n  const rafTargetRef = React.useRef<string | null>(null)\n  const keyboardSourceIdRef = React.useRef<string | null>(null)\n  const keyboardTargetIdRef = React.useRef<string | null>(null)\n  const focusAfterReorderRef = React.useRef<string | null>(null)\n  const flipTransition = reorderTransition || DEFAULT_COLUMN_FLIP_TRANSITION\n\n  function clearPreviewTransforms(){\n    if(!headerContainerRef.current) return\n    headerContainerRef.current.querySelectorAll('[data-col-id]')?.forEach(el=>{\n      (el as HTMLElement).style.transform = ''\n      ;(el as HTMLElement).style.transition = ''\n  delete (el as HTMLElement).dataset.flipInit\n    })\n  }\n\n  function scheduleFocusGrip(columnId: string){\n    focusAfterReorderRef.current = columnId\n    // doble RAF para asegurar repaint tras reordenamiento\n    requestAnimationFrame(()=>{\n      requestAnimationFrame(()=>{\n        if(!headerContainerRef.current) return\n        const grip = headerContainerRef.current.querySelector(`[data-grip-for=\"${columnId}\"]`) as HTMLElement | null\n        if(grip){\n          grip.focus({ preventScroll: true })\n          focusAfterReorderRef.current = null\n        }\n      })\n    })\n  }\n\n  function captureInitialLayout(){\n    if(!headerContainerRef.current) return\n    const cells = Array.from(headerContainerRef.current.querySelectorAll('[data-col-id]')) as HTMLElement[]\n    if(!cells.length) return\n    const widths: Record<string,number> = {}\n    const lefts: Record<string,number> = {}\n    let baseLeft = Infinity\n    cells.forEach(el=>{\n      const id = el.dataset.colId!\n      const rect = el.getBoundingClientRect()\n      widths[id] = rect.width\n      lefts[id] = rect.left\n      if(rect.left < baseLeft) baseLeft = rect.left\n    })\n    initialLayoutRef.current = { baseLeft, widths, lefts }\n  }\n\n  function applyPreview(targetId: string){\n    if(!enableColumnReorder) return\n    const sourceId = dragSourceIdRef.current\n    if(!sourceId) { clearPreviewTransforms(); return }\n    // Evitar recomputación si ya estamos sobre el mismo destino\n    if(targetId === lastPreviewTargetRef.current) return\n    if(sourceId === targetId){\n      lastPreviewTargetRef.current = targetId\n      clearPreviewTransforms();\n      return\n    }\n    const layout = initialLayoutRef.current\n    if(!layout) return\n    // construir orden actual real\n    const currentOrder = (columnOrder.length ? columnOrder : table.getAllLeafColumns().map(c=>c.id))\n    const next = [...currentOrder]\n    const from = next.indexOf(sourceId)\n    const to = next.indexOf(targetId)\n    if(from === -1 || to === -1) return\n    next.splice(from,1)\n    next.splice(to,0,sourceId)\n    // Calcular posiciones objetivo acumulando widths\n    let accLeft = layout.baseLeft\n    const targetLeftMap: Record<string, number> = {}\n    next.forEach(id=>{\n      targetLeftMap[id] = accLeft\n      accLeft += layout.widths[id]\n    })\n    // Aplicar transform FLIP (currentLeft -> targetLeft)\n    if(!headerContainerRef.current) return\n    headerContainerRef.current.querySelectorAll('[data-col-id]')?.forEach(el=>{\n      const node = el as HTMLElement\n      const id = node.dataset.colId!\n      const currentLeft = layout.lefts[id]\n      const targetLeft = targetLeftMap[id]\n      if(currentLeft == null || targetLeft == null) return\n      const dx = targetLeft - currentLeft\n      const desired = `translateX(${dx}px)`\n      if(node.style.transform === desired) return // no re-disparar transición\n      // Sólo setear transición la primera vez\n      if(!node.dataset.flipInit){\n        node.style.willChange = 'transform'\n        node.dataset.flipInit = '1'\n      }\n  node.style.transition = flipTransition\n      node.style.transform = desired\n    })\n    lastPreviewTargetRef.current = targetId\n  }\n\n  function schedulePreview(targetId: string){\n    if(pendingRafRef.current){\n      rafTargetRef.current = targetId\n      return\n    }\n    rafTargetRef.current = targetId\n    pendingRafRef.current = requestAnimationFrame(()=>{\n      const t = rafTargetRef.current\n      if(t) applyPreview(t)\n      pendingRafRef.current = null\n    })\n  }\n\n  function commitReorder(sourceId: string, targetId: string){\n    if(sourceId === targetId) return\n    setColumnOrder(prev => {\n      const current = prev.length ? prev : table.getAllLeafColumns().map(c=>c.id)\n      const next = [...current]\n      const from = next.indexOf(sourceId)\n      const to = next.indexOf(targetId)\n      if(from === -1 || to === -1) return current\n      next.splice(from,1)\n      next.splice(to,0,sourceId)\n      scheduleFocusGrip(sourceId)\n      return next\n    })\n  }\n\n  React.useEffect(()=>{\n    return ()=>{ clearPreviewTransforms() }\n  },[])\n\n  React.useEffect(()=>{\n    isMountedRef.current = true\n    return () => { isMountedRef.current = false }\n  },[])\n\n  // Inicializar orden al montar / cambiar columnas\n  React.useEffect(() => {\n    if (columnOrder.length === 0) {\n      setColumnOrder(\n        columns\n          .map((c: any) => c.id ?? c.accessorKey)\n          .filter(Boolean)\n      )\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [columns])\n\n  const table = useReactTable({\n    data,\n    columns,\n    state: { sorting, columnVisibility, rowSelection, columnFilters, columnOrder, grouping },\n    enableRowSelection: true,\n    enableGrouping,\n    onRowSelectionChange: setRowSelection,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    onColumnVisibilityChange: setColumnVisibility,\n    onColumnOrderChange: setColumnOrder,\n    onGroupingChange: setGrouping,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFacetedRowModel: getFacetedRowModel(),\n    getFacetedUniqueValues: getFacetedUniqueValues(),\n    ...(enableGrouping\n      ? { getGroupedRowModel: getGroupedRowModel(), getExpandedRowModel: getExpandedRowModel() }\n      : {}),\n  })\n\n  function handleHeaderDrop(\n    e: React.DragEvent<HTMLTableCellElement>,\n    targetId: string\n  ) {\n    if (!enableColumnReorder) return\n    e.preventDefault()\n  const sourceId = e.dataTransfer.getData('text/plain')\n    clearPreviewTransforms()\n    dragSourceIdRef.current = null\n    initialLayoutRef.current = null\n  lastPreviewTargetRef.current = null\n    if (!sourceId) return\n    // Si soltamos sobre la misma celda origen pero había un preview distinto, usar ese destino\n    if(sourceId === targetId && lastPreviewTargetRef.current && lastPreviewTargetRef.current !== sourceId){\n      targetId = lastPreviewTargetRef.current\n    }\n    if (sourceId === targetId) return\n  if(!isMountedRef.current) return\n    setColumnOrder(prev => {\n      const current = prev.length\n        ? prev\n        : table.getAllLeafColumns().map(c => c.id)\n      const next = [...current]\n      const from = next.indexOf(sourceId)\n      const to = next.indexOf(targetId)\n      if (from === -1 || to === -1) return current\n      next.splice(from, 1)\n      next.splice(to, 0, sourceId)\n      scheduleFocusGrip(sourceId)\n      return next\n    })\n  }\n\n  function renderCell(row: Row<TData>, cell: Cell<TData, unknown>) {\n    if (enableGrouping) {\n      if (cell.getIsGrouped()) {\n        return (\n          <button\n            onClick={row.getToggleExpandedHandler()}\n            className='flex items-center gap-2 font-medium'\n          >\n            <span className='inline-block w-4'>\n              {row.getIsExpanded() ? '−' : '+'}\n            </span>\n            {flexRender(cell.column.columnDef.cell, cell.getContext())}\n            <span className='text-xs text-muted-foreground'>\n              ({row.subRows.length})\n            </span>\n          </button>\n        )\n      }\n      if (cell.getIsAggregated()) {\n        return flexRender(\n          cell.column.columnDef.aggregatedCell ??\n            cell.column.columnDef.cell,\n          cell.getContext()\n        )\n      }\n      if (cell.getIsPlaceholder()) return null\n    }\n    return flexRender(cell.column.columnDef.cell, cell.getContext())\n  }\n\n  return (\n    <div className='space-y-4'>\n      <DataTableToolbar\n        table={table}\n        searchKey={searchKey}\n        searchPlaceholder={searchPlaceholder}\n        filters={filters}\n        enableGrouping={enableGrouping}\n        grouping={grouping}\n        setGrouping={setGrouping}\n        groupableColumns={groupableColumns}\n      />\n      <div className='rounded-md border'>\n        <Table>\n          <TableHeader ref={headerContainerRef}>\n            {table.getHeaderGroups().map(hg => (\n              <TableRow key={hg.id}>\n                {hg.headers.map(header => {\n                  const id = header.column.id\n                  const canReorder =\n                    enableColumnReorder &&\n                    header.column.getCanHide() &&\n                    !(header.column.columnDef as any)?.meta?.disableReorder\n                  return (\n                    <TableHead\n                      key={header.id}\n                      data-col-id={id}\n                      // DragOver: prevenimos default y programamos preview si cambia el target\n                      onDragOver={(e: React.DragEvent<HTMLTableCellElement>) => { \n                        if (enableColumnReorder && dragSourceIdRef.current){ \n                          e.preventDefault(); \n                          if(dragSourceIdRef.current !== id && lastPreviewTargetRef.current !== id){\n                            schedulePreview(id)\n                          }\n                        } \n                      }}\n                      onDragEnter={(e: React.DragEvent<HTMLTableCellElement>)=>{ if(enableColumnReorder && dragSourceIdRef.current && dragSourceIdRef.current !== id){ schedulePreview(id) } }}\n                      onDrop={(e: React.DragEvent<HTMLTableCellElement>) => handleHeaderDrop(e, id)}\n                      className={\n                        canReorder ? 'relative select-none' : undefined\n                      }\n                    >\n                      {canReorder && (\n                        <span\n                          className='absolute left-1 top-1/2 -translate-y-1/2 inline-flex items-center p-0.5 rounded hover:bg-muted'\n                          draggable\n                          data-grip-for={id}\n                          onDragStart={(e)=>{\n                            if(!canReorder) return\n                            dragSourceIdRef.current = id\n                            keyboardSourceIdRef.current = id\n                            e.dataTransfer.effectAllowed = 'move'\n                            e.dataTransfer.setData('text/plain', id)\n                            captureInitialLayout()\n                          }}\n                          onDragEnd={()=>{ clearPreviewTransforms(); dragSourceIdRef.current=null; initialLayoutRef.current=null }}\n                          onMouseEnter={e=>{ (e.currentTarget as HTMLElement).style.cursor='move' }}\n                          onFocus={e=>{ (e.currentTarget as HTMLElement).style.cursor='move'; keyboardSourceIdRef.current = id }}\n                          tabIndex={0}\n                          role='button'\n                          aria-label='Reordenar columna'\n                          onKeyDown={(e)=>{\n                            if(!enableColumnReorder) return\n                            const sourceId = keyboardSourceIdRef.current || id\n                            const order = (columnOrder.length ? columnOrder : table.getAllLeafColumns().map(c=>c.id))\n                            const reorderable = order.filter(colId=>{\n                              const col = table.getAllLeafColumns().find(c=>c.id===colId)\n                              return col && col.getCanHide() && !(col.columnDef as any)?.meta?.disableReorder\n                            })\n                            const currentIndex = reorderable.indexOf(sourceId)\n                            if(e.key === 'ArrowRight'){\n                              e.preventDefault()\n                              if(currentIndex > -1 && currentIndex < reorderable.length - 1){\n                                const target = reorderable[currentIndex+1]\n                                dragSourceIdRef.current = sourceId\n                                captureInitialLayout()\n                                schedulePreview(target)\n                                keyboardTargetIdRef.current = target\n                              }\n                            } else if(e.key === 'ArrowLeft'){\n                              e.preventDefault()\n                              if(currentIndex > 0){\n                                const target = reorderable[currentIndex-1]\n                                dragSourceIdRef.current = sourceId\n                                captureInitialLayout()\n                                schedulePreview(target)\n                                keyboardTargetIdRef.current = target\n                              }\n                            } else if(e.key === 'Enter' || e.key === ' '){\n                              if(keyboardTargetIdRef.current){\n                                e.preventDefault()\n                                commitReorder(sourceId, keyboardTargetIdRef.current)\n                                clearPreviewTransforms()\n                                dragSourceIdRef.current = null\n                                keyboardSourceIdRef.current = null\n                                keyboardTargetIdRef.current = null\n                              }\n                            } else if(e.key === 'Escape'){\n                              clearPreviewTransforms()\n                              keyboardTargetIdRef.current = null\n                              dragSourceIdRef.current = null\n                            }\n                          }}\n                        >\n                          <GripVertical className='h-3 w-3 opacity-60' />\n                        </span>\n                      )}\n                      <div className={canReorder ? 'pl-4' : undefined}>\n                        {header.isPlaceholder\n                          ? null\n                          : flexRender(\n                              header.column.columnDef.header,\n                              header.getContext()\n                            )}\n                      </div>\n                    </TableHead>\n                  )\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map(row => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && 'selected'}\n                >\n                  {row.getVisibleCells().map(cell => (\n                    <TableCell key={cell.id}>\n                      {renderCell(row as Row<TData>, cell as Cell<TData, unknown>)}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell colSpan={columns.length} className='h-24 text-center'>\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <DataTablePagination table={table} />\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Button } from '../ui/button'\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from '../ui/dropdown-menu'\nimport { MoreHorizontal, Edit, Trash2, Eye, Copy, Archive } from 'lucide-react'\n\nexport interface ActionItem {\n  id: string\n  label: string\n  icon: React.ComponentType<{ className?: string }>\n  onClick: (row: any) => void\n  variant?: 'default' | 'destructive'\n  disabled?: boolean | ((row: any) => boolean)\n}\n\ninterface ActionsMenuProps { row: any; actions?: ActionItem[]; menuLabel?: string }\n\nexport const defaultActions = {\n  view: (onView: (row: any) => void): ActionItem => ({ id: 'view', label: 'Ver detalles', icon: Eye, onClick: onView }),\n  edit: (onEdit: (row: any) => void): ActionItem => ({ id: 'edit', label: 'Editar', icon: Edit, onClick: onEdit }),\n  copy: (onCopy: (row: any) => void): ActionItem => ({ id: 'copy', label: 'Duplicar', icon: Copy, onClick: onCopy }),\n  archive: (onArchive: (row: any) => void): ActionItem => ({ id: 'archive', label: 'Archivar', icon: Archive, onClick: onArchive }),\n  delete: (onDelete: (row: any) => void): ActionItem => ({ id: 'delete', label: 'Eliminar', icon: Trash2, onClick: onDelete, variant: 'destructive' as const }),\n}\n\nexport function ActionsMenu({ row, actions = [], menuLabel = 'Acciones' }: ActionsMenuProps) {\n  if (!actions.length) return null\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant='ghost' className='h-8 w-8 p-0'>\n          <span className='sr-only'>Abrir menú</span>\n          <MoreHorizontal className='h-4 w-4' />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align='end' className='w-[160px]'>\n        <DropdownMenuLabel>{menuLabel}</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        {actions.map(action => { const isDisabled = typeof action.disabled === 'function' ? action.disabled(row) : action.disabled; return (\n          <DropdownMenuItem key={action.id} onClick={() => !isDisabled && action.onClick(row)} disabled={isDisabled} className={action.variant === 'destructive' ? 'text-destructive focus:text-destructive' : ''}>\n            <action.icon className='mr-2 h-4 w-4' />{action.label}\n          </DropdownMenuItem>\n        ) })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n","import { ColumnDef } from '@tanstack/react-table'\nimport { ActionsMenu, ActionItem } from './actions-menu'\n\ninterface CreateActionsColumnOptions<T> { actions: ActionItem[]; menuLabel?: string; id?: string; width?: number }\n\nexport function createActionsColumn<T>(options: CreateActionsColumnOptions<T>): ColumnDef<T> {\n  return {\n    id: options.id || 'actions',\n    enableHiding: false,\n    enableSorting: false,\n    enableColumnFilter: false,\n    header: () => null,\n    size: options.width || 50,\n    cell: ({ row }) => <ActionsMenu row={row.original} actions={options.actions} menuLabel={options.menuLabel} />,\n  }\n}\n\nexport const defaultActionsColumnConfig = { id: 'actions', width: 50, menuLabel: 'Acciones' }\n","import * as React from 'react'\nimport { CommandDialog, CommandGroup, CommandInput, CommandItem, CommandList, CommandEmpty, CommandSeparator } from '../ui/command'\nimport { Button } from '../ui/button'\n\n/** Ejemplo mínimo de uso del Command palette integrado */\nexport function CommandPaletteExample(){\n  const [open,setOpen]=React.useState(false)\n  React.useEffect(()=>{\n    const down = (e:any) => {\n      if (e.key==='k' && (e.metaKey || e.ctrlKey)) {\n        e.preventDefault();\n        setOpen(o=>!o)\n      }\n    }\n    window.addEventListener('keydown',down)\n    return ()=>window.removeEventListener('keydown',down)\n  },[])\n  return (\n    <>\n      <Button variant='outline' onClick={()=>setOpen(true)} className='gap-2'>⌘K <span className='text-xs opacity-70'>(o Ctrl+K)</span></Button>\n      <CommandDialog open={open} onOpenChange={setOpen}>\n        <CommandInput placeholder='Buscar comando...' />\n        <CommandList>\n          <CommandEmpty>Sin resultados.</CommandEmpty>\n          <CommandGroup heading='Navegación'>\n            <CommandItem onSelect={()=>alert('Ir a inicio')}>Inicio</CommandItem>\n            <CommandItem onSelect={()=>alert('Ir a reportes')}>Reportes</CommandItem>\n          </CommandGroup>\n          <CommandSeparator />\n          <CommandGroup heading='Acciones'>\n            <CommandItem onSelect={()=>alert('Crear registro')}>Crear registro</CommandItem>\n            <CommandItem onSelect={()=>alert('Exportar')}>Exportar</CommandItem>\n          </CommandGroup>\n        </CommandList>\n      </CommandDialog>\n    </>\n  )\n}\n","// Paleta centralizada de tonos vivos (light/dark friendly)\nexport const CHART_VIBRANT_PALETTE: string[] = [\n  'hsl(210 90% 55%)', // azul\n  'hsl(280 85% 60%)', // violeta\n  'hsl(340 80% 55%)', // magenta/rosa\n  'hsl(20 90% 55%)',  // naranja\n  'hsl(145 70% 45%)', // verde\n  'hsl(50 95% 55%)',  // amarillo\n  'hsl(185 75% 50%)', // cian\n  'hsl(315 70% 55%)', // fucsia\n  'hsl(0 85% 55%)',   // rojo\n  'hsl(95 60% 45%)',  // lima\n  'hsl(255 75% 60%)', // índigo\n  'hsl(30 80% 50%)',  // ámbar\n]\n\nexport function chartColor(index: number){\n  return CHART_VIBRANT_PALETTE[index % CHART_VIBRANT_PALETTE.length]\n}\n\nexport function buildSeriesConfig(keys: (string|number)[]){\n  return keys.reduce<Record<string,{ label: string; color: string }>>((acc,k,i)=>{ acc[String(k)]={ label:String(k), color: chartColor(i) }; return acc }, {})\n}\n","import * as React from 'react'\nimport * as RechartsPrimitive from 'recharts'\nimport { cn } from '../internal/lib/utils'\n\nconst THEMES = { light: '', dark: '.dark' } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = { config: ChartConfig }\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\nfunction useChart() { const c = React.useContext(ChartContext); if(!c) throw new Error('useChart must be used within a <ChartContainer />'); return c }\n\nexport const ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<'div'> & { config: ChartConfig; children: React.ComponentProps<typeof RechartsPrimitive.ResponsiveContainer>['children'] }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g,'')}`\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        role='img'\n        aria-label={(props as any)['aria-label'] || 'Chart visualization'}\n        className={cn('flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke=#ccc]]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke=#fff]]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke=#ccc]]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke=#ccc]]:stroke-border [&_.recharts-sector[stroke=#fff]]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none', className)}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>{children}</RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = 'Chart'\n\nexport const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(([,c]) => c.theme || c.color)\n  if(!colorConfig.length) return null\n  return (\n    <style dangerouslySetInnerHTML={{ __html: Object.entries(THEMES).map(([theme,prefix]) => `\\n${prefix} [data-chart=${id}] {\\n${colorConfig.map(([key, cfg])=>{ const color = cfg.theme?.[theme as keyof typeof cfg.theme] || cfg.color; return color ? `  --color-${key}: ${color};` : null }).join('\\n')}\\n}`).join('\\n') }} />\n  )\n}\n\nexport const ChartTooltip = RechartsPrimitive.Tooltip\n\nexport const ChartTooltipContent = React.forwardRef<HTMLDivElement, React.ComponentProps<typeof RechartsPrimitive.Tooltip> & React.ComponentProps<'div'> & { hideLabel?: boolean; hideIndicator?: boolean; indicator?: 'line' | 'dot' | 'dashed'; nameKey?: string; labelKey?: string }>(\n  ({ active, payload, className, indicator='dot', hideLabel=false, hideIndicator=false, label, labelFormatter, labelClassName, formatter, color, nameKey, labelKey }, ref) => {\n    const { config } = useChart()\n    const tooltipLabel = React.useMemo(()=>{\n      if(hideLabel || !payload?.length) return null\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || 'value'}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value = !labelKey && typeof label === 'string' ? config[label as keyof typeof config]?.label || label : itemConfig?.label\n      if(labelFormatter) return <div className={cn('font-medium', labelClassName)}>{labelFormatter(value, payload)}</div>\n      if(!value) return null\n      return <div className={cn('font-medium', labelClassName)}>{value}</div>\n    }, [label,labelFormatter,payload,hideLabel,labelClassName,config,labelKey])\n    if(!active || !payload?.length) return null\n    const nestLabel = payload.length===1 && indicator!=='dot'\n    return (\n      <div ref={ref} className={cn('grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl', className)}>\n        {!nestLabel ? tooltipLabel : null}\n        <div className='grid gap-1.5'>\n          {payload.map((item, index)=>{\n            const key = `${nameKey || item.name || item.dataKey || 'value'}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || (item as any).payload?.fill || (item as any).color\n            return (\n              <div key={item.dataKey} className={cn('flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground', indicator==='dot' && 'items-center')}>\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, (item as any).payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? <itemConfig.icon /> : (!hideIndicator && <div className={cn('shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]', { 'h-2.5 w-2.5': indicator==='dot', 'w-1': indicator==='line', 'w-0 border-[1.5px] border-dashed bg-transparent': indicator==='dashed', 'my-0.5': nestLabel && indicator==='dashed' })} style={{ ['--color-bg' as any]: indicatorColor, ['--color-border' as any]: indicatorColor }} />)}\n                    <div className={cn('flex flex-1 justify-between leading-none', nestLabel ? 'items-end':'items-center')}>\n                      <div className='grid gap-1.5'>\n                        {nestLabel ? tooltipLabel : null}\n                        <span className='text-muted-foreground'>{itemConfig?.label || item.name}</span>\n                      </div>\n                      {item.value && <span className='font-mono font-medium tabular-nums text-foreground'>{item.value.toLocaleString()}</span>}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = 'ChartTooltip'\n\nexport const ChartLegend = RechartsPrimitive.Legend\nexport const ChartLegendContent = React.forwardRef<HTMLDivElement, React.ComponentProps<'div'> & { payload?: any; verticalAlign?: 'top'|'bottom'; hideIcon?: boolean; nameKey?: string }>(\n  ({ className, hideIcon=false, payload, verticalAlign='bottom', nameKey }, ref)=>{\n    const { config } = useChart()\n    if(!payload?.length) return null\n    return (\n      <div ref={ref} className={cn('flex items-center justify-center gap-4', verticalAlign==='top' ? 'pb-3':'pt-3', className)}>\n        {payload.map((item:any)=>{\n          const key = `${nameKey || item.dataKey || 'value'}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n          return (\n            <div key={item.value} className={cn('flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground')}>\n              {itemConfig?.icon && !hideIcon ? <itemConfig.icon /> : <div className='h-2 w-2 shrink-0 rounded-[2px]' style={{ backgroundColor: item.color }} />}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = 'ChartLegend'\n\nfunction getPayloadConfigFromPayload(config: ChartConfig, payload: any, key: string){\n  const payloadPayload = payload && typeof payload==='object' ? payload.payload : undefined\n  let configLabelKey = key\n  if(payload && key in payload && typeof payload[key]==='string') configLabelKey = payload[key]\n  else if(payloadPayload && key in payloadPayload && typeof payloadPayload[key]==='string') configLabelKey = payloadPayload[key]\n  return configLabelKey in config ? config[configLabelKey] : (config as any)[key]\n}\n\nexport { useChart }\n","import React from 'react'\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Area, ReferenceLine, BarChart, Bar, ResponsiveContainer } from 'recharts'\nimport { chartColor } from './palette'\nimport { ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent, type ChartConfig } from '../ui/chart'\nimport { cn } from '../internal/lib/utils'\n\nexport type LineDatum = { category: string; value?: number; [k: string]: any }\nexport interface BaseLineChartProps {\n  data: LineDatum[]\n  lines: Array<{ dataKey: string; stroke?: string; strokeWidth?: number; dot?: boolean; type?: string }>\n  config: ChartConfig\n  height?: number\n  grid?: boolean\n  areaUnder?: boolean\n  referenceLines?: Array<{ y?: number; x?: string | number; label?: string; stroke?: string; strokeDasharray?: string }>\n  tooltipProps?: Partial<React.ComponentProps<typeof ChartTooltip>>\n  className?: string\n}\n\nexport const BaseLineChart: React.FC<BaseLineChartProps> = ({\n  data,\n  lines,\n  config,\n  height = 300,\n  grid = true,\n  areaUnder = false,\n  referenceLines = [],\n  tooltipProps,\n  className,\n}) => (\n  <ChartContainer config={config} className={cn('w-full', className)} style={{ height }}>\n    <LineChart data={data} margin={{ top: 8, right: 12, left: 12, bottom: 8 }}>\n      {grid && <CartesianGrid strokeDasharray='3 3' className='stroke-border/40' />}\n      <XAxis dataKey='category' tickLine={false} axisLine={false} tickMargin={8} />\n      <YAxis width={40} tickLine={false} axisLine={false} tickMargin={4} />\n      <ChartTooltip content={<ChartTooltipContent />} {...tooltipProps} />\n      <ChartLegend content={<ChartLegendContent />} />\n      {referenceLines.map((r, i) => (\n        <ReferenceLine key={i} {...r} stroke={r.stroke || 'hsl(var(--muted-foreground))'} />\n      ))}\n      {lines.map((l, i) => (\n        <Line key={i} type={(l.type as any) || 'monotone'} dataKey={l.dataKey} stroke={l.stroke || `var(--color-${l.dataKey})`} strokeWidth={l.strokeWidth || 2} dot={l.dot ?? false} activeDot={{ r: 5 }} />\n      ))}\n      {areaUnder && lines.length === 1 && (\n        <Area dataKey={lines[0].dataKey} type='monotone' stroke='none' fill={`var(--color-${lines[0].dataKey})`} fillOpacity={0.15} />\n      )}\n    </LineChart>\n  </ChartContainer>\n)\n\nexport const SimpleLineChart: React.FC<{ data: LineDatum[] }> = ({ data }) => (\n  <BaseLineChart data={data} config={{ value: { label: 'Valor', color: chartColor(0) } }} lines={[{ dataKey: 'value', stroke: chartColor(0) }]} areaUnder />\n)\n\nexport const MultiLineChart: React.FC<{ data: LineDatum[]; series: string[] }> = ({ data, series }) => {\n  const config: ChartConfig = series.reduce((acc, key, idx) => {\n    acc[key] = { label: key, color: chartColor(idx) }\n    return acc\n  }, {} as ChartConfig)\n  return <BaseLineChart data={data} config={config} lines={series.map((s,i) => ({ dataKey: s, dot: false, stroke: chartColor(i) }))} grid />\n}\n\nexport const LineChartWithReference: React.FC<{ data: LineDatum[]; referenceY: number }> = ({ data, referenceY }) => (\n  <BaseLineChart data={data} config={{ value: { label: 'Valor', color: chartColor(0) } }} lines={[{ dataKey: 'value', dot: true, stroke: chartColor(0) }]} referenceLines={[{ y: referenceY, stroke: chartColor(1), strokeDasharray: '4 4', label: `Meta ${referenceY}` }]} />\n)\n\n// ---- Bar / Area / Stacked Variants ----\n\nexport interface BaseBarChartProps {\n  data: LineDatum[]\n  bars: Array<{ dataKey: string; fill?: string; stackId?: string; radius?: number | [number, number, number, number] }>\n  config: ChartConfig\n  height?: number\n  grid?: boolean\n  stacked?: boolean\n  tooltipProps?: Partial<React.ComponentProps<typeof ChartTooltip>>\n  className?: string\n}\n\nexport const BaseBarChart: React.FC<BaseBarChartProps> = ({ data, bars, config, height = 300, grid = true, stacked = false, tooltipProps, className }) => (\n  <ChartContainer config={config} className={cn('w-full', className)} style={{ height }}>\n    <BarChart data={data} margin={{ top: 8, right: 12, left: 12, bottom: 8 }}>\n      {grid && <CartesianGrid strokeDasharray='3 3' className='stroke-border/40' />}\n      <XAxis dataKey='category' tickLine={false} axisLine={false} tickMargin={8} />\n      <YAxis width={40} tickLine={false} axisLine={false} tickMargin={4} />\n      <ChartTooltip content={<ChartTooltipContent />} {...tooltipProps} />\n      <ChartLegend content={<ChartLegendContent />} />\n      {bars.map((b, i) => (\n        <Bar key={i} dataKey={b.dataKey} fill={b.fill || `var(--color-${b.dataKey})`} stackId={stacked ? (b.stackId || 'stack') : b.stackId} radius={b.radius ?? 4} />\n      ))}\n    </BarChart>\n  </ChartContainer>\n)\n\nexport const SimpleBarChart: React.FC<{ data: LineDatum[] }> = ({ data }) => (\n  <BaseBarChart\n    data={data}\n    config={{ value: { label: 'Valor', color: chartColor(0) } }}\n    bars={[{ dataKey: 'value', fill: chartColor(0) }]}\n  />\n)\n\nexport const StackedBarChart: React.FC<{ data: LineDatum[]; series: string[] }> = ({ data, series }) => {\n  const config: ChartConfig = series.reduce((acc, key, idx) => {\n    acc[key] = { label: key, color: chartColor(idx) }\n    return acc\n  }, {} as ChartConfig)\n  return <BaseBarChart data={data} config={config} bars={series.map((s,i) => ({ dataKey: s, fill: chartColor(i) }))} stacked />\n}\n\nexport const SimpleAreaChart: React.FC<{ data: LineDatum[] }> = ({ data }) => (\n  <BaseLineChart\n    data={data}\n    config={{ value: { label: 'Valor', color: chartColor(0) } }}\n    lines={[{ dataKey: 'value', type: 'monotone', stroke: chartColor(0) }]}\n    areaUnder\n  />\n)\n","import React from 'react'\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip as RTooltip, ScatterChart, Scatter, XAxis, YAxis, ZAxis, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar, Treemap } from 'recharts'\nimport { chartColor } from './palette'\nimport { ChartContainer, ChartTooltipContent, ChartTooltip, type ChartConfig } from '../ui/chart'\nimport { cn } from '../internal/lib/utils'\n\n// ---------- Donut Chart ----------\nexport interface DonutDatum { name: string; value: number; fill?: string }\nexport const DonutChart: React.FC<{ data: DonutDatum[]; height?: number; innerRadius?: number; outerRadius?: number; config?: ChartConfig; className?: string }>=({ data, height=260, innerRadius=60, outerRadius=100, config, className })=>{\n  const cfg: ChartConfig = config || data.reduce((acc, d, i)=>{ acc[d.name] = { label: d.name, color: d.fill || chartColor(i) }; return acc }, {} as ChartConfig)\n  return (\n    <ChartContainer config={cfg} className={cn('w-full', className)} style={{ height }}>\n      <PieChart>\n        <Pie data={data} dataKey='value' nameKey='name' innerRadius={innerRadius} outerRadius={outerRadius} paddingAngle={2} stroke='none'>\n          {data.map((d,i)=>(<Cell key={i} fill={d.fill || chartColor(i)} />))}\n        </Pie>\n        <ChartTooltip content={<ChartTooltipContent />} />\n      </PieChart>\n    </ChartContainer>\n  )\n}\n\n// ---------- Scatter Chart ----------\nexport interface ScatterDatum { x: number; y: number; z?: number; category?: string }\nexport const ScatterPointsChart: React.FC<{ data: ScatterDatum[]; height?: number; showZ?: boolean; className?: string }>=({ data, height=260, showZ=false, className })=>{\n  // series por category\n  const groups = data.reduce<Record<string, ScatterDatum[]>>((acc,d)=>{ const key = d.category||'Serie'; (acc[key]=acc[key]||[]).push(d); return acc }, {})\n  const config: ChartConfig = Object.keys(groups).reduce((a,k,i)=>{ a[k]={ label:k, color: chartColor(i) }; return a }, {} as ChartConfig)\n  return (\n    <ChartContainer config={config} className={cn('w-full', className)} style={{ height }}>\n      <ScatterChart margin={{ top: 8, right: 12, bottom: 8, left: 12 }}>\n        <XAxis dataKey='x' type='number' tickLine={false} axisLine={false} />\n        <YAxis dataKey='y' type='number' tickLine={false} axisLine={false} />\n        {showZ && <ZAxis dataKey='z' range={[40,400]} />}\n        <ChartTooltip content={<ChartTooltipContent />} />\n        {Object.entries(groups).map(([k,vals],i)=>(\n          <Scatter key={k} name={k} data={vals} fill={chartColor(i)} />\n        ))}\n      </ScatterChart>\n    </ChartContainer>\n  )\n}\n\n// ---------- Radar Chart ----------\nexport interface RadarDatum { subject: string; [serie: string]: any }\nexport const SimpleRadarChart: React.FC<{ data: RadarDatum[]; series: string[]; height?: number; className?: string }> = ({ data, series, height=300, className }) => {\n  const config: ChartConfig = series.reduce((acc,s,i)=>{ acc[s]={ label:s, color: chartColor(i) }; return acc }, {} as ChartConfig)\n  return (\n    <ChartContainer config={config} className={cn('w-full', className)} style={{ height }}>\n      <RadarChart data={data}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey='subject' />\n        <PolarRadiusAxis />\n        {series.map((s,i) => (\n          <Radar key={s} dataKey={s} stroke={chartColor(i)} fill={chartColor(i)} fillOpacity={0.2} />\n        ))}\n        <ChartTooltip content={<ChartTooltipContent />} />\n      </RadarChart>\n    </ChartContainer>\n  )\n}\n\n// ---------- Heatmap (Treemap approximation) ----------\nexport interface HeatmapDatum { name: string; value: number; children?: HeatmapDatum[]; fill?: string }\nexport const SimpleHeatmap: React.FC<{ data: HeatmapDatum[]; height?: number; className?: string }> = ({ data, height=300, className }) => {\n  // Treemap como aproximación de heatmap jerárquico\n  const config: ChartConfig = data.reduce((acc,d,i)=>{ acc[d.name]={ label:d.name, color: d.fill || chartColor(i) }; return acc }, {} as ChartConfig)\n  return (\n    <ChartContainer config={config} className={cn('w-full', className)} style={{ height }}>\n      <Treemap data={data.map((d,i)=> ({ ...d, fill: d.fill || chartColor(i) }))} dataKey='value' stroke='var(--background)' fill='transparent' />\n    </ChartContainer>\n  )\n}\n\n// ---------- Heatmap (real grid) ----------\nexport interface HeatmapCellDatum { x: string|number; y: string|number; value: number }\nexport interface HeatmapChartProps {\n  data: HeatmapCellDatum[]\n  xKeys?: (string|number)[]\n  yKeys?: (string|number)[]\n  height?: number\n  width?: number | string\n  className?: string\n  // Compat: colors (from/to) se mantiene. Nuevos: baseColor y/o colorStops\n  colors?: { from: string; to: string }\n  baseColor?: string // si se pasa, genera from (alpha .15) y to (color pleno)\n  colorStops?: string[] // gradiente múltiple; si existe anula colors/baseColor\n  valueFormatter?: (v:number)=>string | number\n  gap?: number\n  showCellValues?: boolean\n  showAxes?: boolean\n  title?: string\n}\nexport const HeatmapChart: React.FC<HeatmapChartProps> = ({ data, xKeys, yKeys, height=320, width, className, colors, baseColor, colorStops, valueFormatter, gap=0, showCellValues=true, showAxes=false, title }) => {\n  const [hover, setHover] = React.useState<{ x: any; y: any; value: number; cx: number; cy: number } | null>(null)\n  // Derivar ejes\n  const xs = xKeys || Array.from(new Set(data.map(d=>d.x)))\n  const ys = yKeys || Array.from(new Set(data.map(d=>d.y)))\n  const max = Math.max(...data.map(d=>d.value)) || 1\n  const min = Math.min(...data.map(d=>d.value)) || 0\n  const cfg: ChartConfig = { value: { label: 'Valor', color: 'hsl(var(--primary))' } }\n  // Preparar esquema de color\n  let scheme: string[] | null = null\n  if(colorStops && colorStops.length >= 2) scheme = colorStops\n  else if(baseColor){\n    // Construir from/to con alpha\n    const alphaFrom = baseColor.startsWith('hsl(') ? baseColor.replace(/\\)$/,' / 0.15)') : baseColor + '26'\n    scheme = [alphaFrom, baseColor]\n  }\n  const finalColors = colors || (scheme ? { from: scheme[0], to: scheme[scheme.length-1] } : { from: chartColor(0).replace(/\\)$/,' / 0.15)'), to: chartColor(0) })\n  if(!scheme) scheme = [finalColors.from, finalColors.to]\n  // Interpolación lineal entre stops (si >2)\n  function interpColor(stopA:string, stopB:string, t:number){\n    // Sólo soportamos hsl(var(--...)) con alpha o hsl(x y z / a). Para otros retornamos stopB.\n    // Heurística: no intentar mezclar si hay variables distintas.\n    return t<0.5 ? stopA : stopB\n  }\n  function cellColor(v:number){\n    if(max===min) return scheme![scheme!.length-1]\n    const ratio = (v - min) / (max - min)\n    if(scheme!.length === 2){\n      const [from, to] = scheme!\n      if(to.startsWith('hsl(') && from.includes('/')){\n        const base = to.replace(/\\)$/,'')\n        return base + ` / ${0.15 + ratio*0.85})`\n      }\n      return ratio < 0.5 ? from : to\n    }\n    // múltiple\n    const seg = 1 / (scheme!.length - 1)\n    const idx = Math.min(scheme!.length - 2, Math.floor(ratio / seg))\n    const localT = (ratio - idx*seg) / seg\n    return interpColor(scheme![idx], scheme![idx+1], localT)\n  }\n  // Márgenes internos en unidades de celda para colocar ejes dentro del SVG\n  const mLeft = showAxes ? 1.2 : 0\n  const mBottom = showAxes ? 1 : 0\n  const totalW = xs.length + mLeft\n  const totalH = ys.length + mBottom\n  return (\n    <ChartContainer config={cfg} className={cn('w-full', className)} style={{ height, width }} aria-label={title || 'Heatmap chart'}>\n      <div\n        className=\"relative w-full h-full flex items-center justify-center p-4 overflow-hidden\"\n        onMouseLeave={()=>setHover(null)}\n        onMouseMove={(e)=>{\n          const container = e.currentTarget as HTMLDivElement\n          const bounds = container.getBoundingClientRect()\n          const relX = e.clientX - bounds.left\n          const relY = e.clientY - bounds.top\n          const cw = bounds.width / totalW\n          const ch = bounds.height / totalH\n          if(relX < mLeft*cw || relY > ys.length*ch) { setHover(null); return }\n          const xi = Math.floor((relX - mLeft*cw) / cw)\n          const yi = Math.floor(relY / ch)\n          if(xi<0||xi>=xs.length||yi<0||yi>=ys.length){ setHover(null); return }\n          const x = xs[xi], y = ys[yi]\n          const cell = data.find(d=>d.x===x && d.y===y)\n          if(!cell){ setHover(null); return }\n          setHover({ x, y, value: cell.value, cx: (mLeft+xi+0.5)*cw, cy: (yi+0.5)*ch })\n        }}\n      >\n        <svg width=\"100%\" height=\"100%\" preserveAspectRatio=\"xMidYMid meet\" viewBox={`0 0 ${totalW} ${totalH}`}> \n          {title && (\n            <text x={mLeft} y={-0.6} fontSize={0.45} fill=\"hsl(var(--muted-foreground))\" textAnchor=\"start\">{title}</text>\n          )}\n          <g className=\"cells\">\n            {ys.map((y, yi)=> xs.map((x, xi)=>{ const cell = data.find(d=>d.x===x && d.y===y); const v = cell?.value ?? 0; const g = Math.min(Math.max(gap,0),0.9); const off = g/2; const size = 1 - g; const isActive = hover && hover.x===x && hover.y===y; return (\n              <g key={`${x}-${y}`}> \n                <rect x={mLeft + xi + off} y={yi + off} width={size} height={size} rx={0.12} fill={cellColor(v)} stroke={isActive ? 'hsl(var(--foreground))':'none'} strokeWidth={isActive?0.04:0} />\n                {showCellValues && (\n                  <text x={mLeft + xi + 0.5} y={yi + 0.5} textAnchor=\"middle\" dominantBaseline=\"middle\" fontSize={0.28} fill=\"hsl(var(--foreground) / 0.7)\">{valueFormatter ? valueFormatter(v) : v}</text>\n                )}\n              </g>\n            )}))}\n          </g>\n          {showAxes && (\n            <g className=\"axes\" fontSize={0.3} fill=\"hsl(var(--muted-foreground))\">\n              {ys.map((y, yi)=> (\n                <text key={`y-${y}`} x={mLeft - 0.25} y={yi+0.5} textAnchor=\"end\" dominantBaseline=\"middle\">{String(y)}</text>\n              ))}\n              {xs.map((x, xi)=> (\n                <text key={`x-${x}`} x={mLeft + xi + 0.5} y={ys.length + 0.55} textAnchor=\"middle\" dominantBaseline=\"middle\">{String(x)}</text>\n              ))}\n            </g>\n          )}\n          {/* Min/Max legend (si no hay título desplazar arriba) */}\n          <g fontSize={0.3} fill=\"hsl(var(--muted-foreground))\">\n            <text x={0} y={title ? -0.15 : -0.4}>{min}</text>\n            <text x={mLeft + xs.length - 1} y={title ? -0.15 : -0.4} textAnchor=\"end\">{max}</text>\n          </g>\n        </svg>\n        {hover && (\n          <div className=\"pointer-events-none absolute z-10 -translate-x-1/2 -translate-y-full rounded-md border bg-popover px-2 py-1 text-[10px] shadow-md\" style={{ left: hover.cx, top: hover.cy }}>\n            <div className=\"font-medium\">{valueFormatter ? valueFormatter(hover.value) : hover.value}</div>\n            <div className=\"text-muted-foreground\">({String(hover.x)}, {String(hover.y)})</div>\n          </div>\n        )}\n      </div>\n    </ChartContainer>\n  )\n}\n","\"use client\"\nimport React from 'react'\nimport { RadialBarChart, RadialBar, PolarAngleAxis } from 'recharts'\nimport { ChartContainer, type ChartConfig } from '../ui/chart'\n\nexport interface GaugeChartProps {\n  value: number\n  maxValue?: number\n  height?: number\n  barSize?: number\n  color?: string\n  showValue?: boolean\n  formatValue?: (v: number, pct: number) => string\n  label?: string\n  className?: string\n}\n\nexport const GaugeChart: React.FC<GaugeChartProps> = ({\n  value,\n  maxValue = 100,\n  height = 180,\n  barSize = 18,\n  color,\n  showValue = true,\n  formatValue,\n  label,\n  className,\n}) => {\n  const pct = Math.max(0, Math.min(1, value / maxValue))\n  const display = formatValue ? formatValue(value, pct) : `${Math.round(pct*100)}%`\n  const data = [ { name: 'value', value: pct * 100 } ]\n  const thicknessPct = Math.min(40, Math.max(6, barSize))\n  const outerRadius = 100\n  const innerRadius = outerRadius - thicknessPct\n  const config: ChartConfig = { value: { label: 'Valor', color: color || 'hsl(var(--primary))' } }\n\n  return (\n    <div className={className} style={{ height }}>\n      <ChartContainer config={config} className='w-full h-full !aspect-auto'>\n        <RadialBarChart data={data} startAngle={180} endAngle={0} innerRadius={innerRadius + '%'} outerRadius={outerRadius + '%'}>\n          <PolarAngleAxis type='number' domain={[0, 100]} dataKey='value' tick={false} />\n          <RadialBar background dataKey='value' cornerRadius={thicknessPct} fill={color || 'var(--color-value)'} stroke='none' className='[&_.recharts-radial-bar-background-sector]:fill-muted' />\n        </RadialBarChart>\n      </ChartContainer>\n      {showValue && (\n        <div className='-mt-14 flex flex-col items-center pointer-events-none select-none'>\n          <div className='text-2xl font-semibold tabular-nums leading-none'>{display}</div>\n          {label && <div className='text-xs mt-1 text-muted-foreground'>{label}</div>}\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":["CommandPrimitive","ICON_REGISTRY","_a","_b","React"],"mappings":"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","x_google_ignoreList":[2,3]}